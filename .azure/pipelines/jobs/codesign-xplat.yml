# This runs code signing for .nupkg files built on MacOS or Linux
parameters:
  inputName: ''

jobs:
- template: default-build.yml@self
  parameters:
    codeSign: true
    dependsOn:
    - ${{ parameters.inputName }}_build
    condition: and(in(variables._SignType, 'test', 'real'), in(dependencies.${{ parameters.inputName }}_build.result, 'Succeeded', 'SucceededWithIssues'))
    jobName: CodeSign_Xplat_${{ parameters.inputName }}
    jobDisplayName: "Code-sign ${{ parameters.inputName }} packages"
    agentOs: Windows
    installNodeJs: false
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download ${{ parameters.inputName }} artifacts
      inputs:
        artifactName: ${{ parameters.inputName }}_Packages
        downloadPath: $(Build.StagingDirectory)/downloaded_packages/
        itemPattern: '**/*.nupkg'
    - task: CopyFiles@2
      displayName: Copy packages to ArtifactsShippingPackagesDir
      inputs:
        sourceFolder: $(Build.StagingDirectory)/downloaded_packages/
        contents: '**/*.nupkg'
        targetFolder: $(Build.SourcesDirectory)/artifacts/packages/$(BuildConfiguration)/shipping/
        flattenFolders: true
    - powershell: .\eng\common\build.ps1
        -ci
        -nativeToolsOnMachine
        -nobl
        -msbuildEngine dotnet
        -restore
        -sign
        -publish
        -configuration $(BuildConfiguration)
        -projects $(Build.SourcesDirectory)/eng/empty.proj
        /p:AssetManifestFileName=aspnetcore-${{ parameters.inputName }}-signed.xml
        /p:DotNetSignType=$(_SignType)
        /p:PublishInstallerBaseVersion=false
        $(_BuildArgs)
        $(_PublishArgs)
        $(_InternalRuntimeDownloadCodeSignArgs)
      displayName: Sign and publish packages
    artifacts:
    - name: CodeSign_Xplat_${{ parameters.inputName }}_Logs
      path: artifacts/log/
      publishOnError: true
      includeForks: true
    - name: ${{ parameters.inputName }}_Packages_Signed
      path: artifacts/packages/
