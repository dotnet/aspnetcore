# We only want to run IdentityModel matrix on main
pr: none
trigger: none
schedules:
# Cron timezone is UTC.
- cron: "0 */12 * * *"
  branches:
    include:
    - main
    - release/8.0
  always: true

variables:
- name: _UseHelixOpenQueues
  value: false
- group: DotNet-HelixApi-Access
- template: /eng/common/templates-official/variables/pool-providers.yml@self

resources:
  repositories:
  # Repo: 1ESPipelineTemplates/1ESPipelineTemplates
  - repository: 1esPipelines
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    sdl:
      sourceAnalysisPool:
        name: NetCore1ESPool-Svc-Internal
        image: 1es-windows-2022
        os: windows
      codeql:
        compiled:
          enabled: false
          justificationForDisabling: 'This is a test-only pipeline. The same product code is already scanned in the main pipeline (aspnetcore-ci)'

    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: .azure/pipelines/jobs/default-build.yml@self
        parameters:
          jobName: IdentityModel_helix_matrix_x64
          jobDisplayName: 'Tests: IdentityModel nightlies helix full matrix x64'
          agentOs: Windows
          timeoutInMinutes: 300
          steps:
          - task: NuGetAuthenticate@1
            inputs:
              forceReinstallCredentialProvider: true
          - task: NuGetCommand@2
            displayName: Install Microsoft.IdentityModel.Logging
            inputs:
              command: 'custom'
              arguments: 'install Microsoft.IdentityModel.Logging
                          -Source https://pkgs.dev.azure.com/dnceng/internal/_packaging/identitymodel-nightlies/nuget/v3/index.json 
                          -DependencyVersion Highest -OutputDirectory $(Build.StagingDirectory) -PreRelease'
          - task: NuGetCommand@2
            displayName: Install Microsoft.IdentityModel.Protocols.OpenIdConnect
            inputs:
              command: 'custom'
              arguments: 'install Microsoft.IdentityModel.Protocols.OpenIdConnect
                          -Source https://pkgs.dev.azure.com/dnceng/internal/_packaging/identitymodel-nightlies/nuget/v3/index.json 
                          -DependencyVersion Highest -OutputDirectory $(Build.StagingDirectory) -PreRelease'
          - task: NuGetCommand@2
            displayName: Install Microsoft.IdentityModel.Protocols.WsFederation
            inputs:
              command: 'custom'
              arguments: 'install Microsoft.IdentityModel.Protocols.WsFederation
                          -Source https://pkgs.dev.azure.com/dnceng/internal/_packaging/identitymodel-nightlies/nuget/v3/index.json 
                          -DependencyVersion Highest -OutputDirectory $(Build.StagingDirectory) -PreRelease'
          - task: NuGetCommand@2
            displayName: System.IdentityModel.Tokens.Jwt
            inputs:
              command: 'custom'
              arguments: 'install System.IdentityModel.Tokens.Jwt
                          -Source https://pkgs.dev.azure.com/dnceng/internal/_packaging/identitymodel-nightlies/nuget/v3/index.json 
                          -DependencyVersion Highest -OutputDirectory $(Build.StagingDirectory) -PreRelease'
          - task: PowerShell@2
            displayName: Add IdentityModel feel to NuGet.config
            inputs:
              filePath: $(Build.SourcesDirectory)/eng/scripts/SetupIdentitySources.ps1
              arguments: -ConfigFile $(Build.SourcesDirectory)/NuGet.config -IdentityModelPackageSource $(Build.StagingDirectory)
          # Build the shared framework
          - script: ./eng/build.cmd -ci -prepareMachine -nativeToolsOnMachine -nobl -all -pack -arch x64
                    /p:CrossgenOutput=false /p:IsIdentityModelTestJob=true /p:ASPNETCORE_TEST_LOG_DIR=artifacts/log
            displayName: Build shared fx
          # -noBuildRepoTasks -noBuildNative -noBuild to avoid repeating work done in the previous step.
          - script: .\eng\build.cmd -ci -prepareMachine -nobl -all -noBuildRepoTasks -noBuildNative -noBuild -test
                    -projects eng\helix\helix.proj /p:IsHelixJob=true /p:RunTemplateTests=false
                    /p:CrossgenOutput=false /p:IsIdentityModelTestJob=true /p:ASPNETCORE_TEST_LOG_DIR=artifacts/log
            displayName: Run build.cmd helix target
            env:
              HelixApiAccessToken: $(HelixApiAccessToken) # Needed for internal queues
              SYSTEM_ACCESSTOKEN: $(System.AccessToken) # We need to set this env var to publish helix results to Azure Dev Ops
          artifacts:
          - name: Helix_logs
            path: artifacts/log/
            publishOnError: true
