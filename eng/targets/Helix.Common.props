<Project>
  <!-- This file is shared between Helix.proj and .csproj files. -->
  <PropertyGroup>
    <HelixQueueAlmaLinux>(AlmaLinux.9.Amd64.Open)azurelinux.3.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:almalinux-9-helix-amd64</HelixQueueAlmaLinux>
    <HelixQueueAlpine>(Alpine.321.Amd64.Open)azurelinux.3.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.21-helix-amd64</HelixQueueAlpine>
    <HelixQueueAzureLinux>(AzureLinux.30.Amd64.Open)azurelinux.3.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-helix-amd64</HelixQueueAzureLinux>
    <HelixQueueDebian>(Debian.13.Amd64.Open)azurelinux.3.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-13-helix-amd64</HelixQueueDebian>
    <HelixQueueFedora>(Fedora.42.Amd64.Open)azurelinux.3.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:fedora-42-helix-amd64</HelixQueueFedora>
    <!-- Arm64 -->
    <HelixQueueArmDebian>(Debian.13.Arm64.Open)ubuntu.2204.armarch.open@mcr.microsoft.com/dotnet-buildtools/prereqs:debian-13-helix-arm64v8</HelixQueueArmDebian>

    <!-- Do not attempt to override global property. -->
    <RunQuarantinedTests Condition=" '$(RunQuarantinedTests)' == '' ">false</RunQuarantinedTests>
  </PropertyGroup>

  <ItemGroup>
    <HelixAvailablePlatform Include="Windows" />
    <HelixAvailablePlatform Include="OSX" />
    <HelixAvailablePlatform Include="Linux" />
  </ItemGroup>

  <!--
    Usually do not need to check $(_UseHelixOpenQueues), $(RunQuarantinedTests) or $(IsWindowsOnlyTest).
    $(_UseHelixOpenQueues) handling in helix.proj and Helix.targets is sufficient. We have no quarantined queues
    at the moment. And, most Windows-specific checks are handled using @(HelixAvailablePlatform) in Helix.props.
  -->
  <Choose>
    <When Condition=" '$(IsHelixPRCheck)' == 'true' ">
      <!-- aspnetcore-ci[-official] (ci.yml) -->
      <!-- aspnetcore-quarantined-pr (quarantined-pr.yml) -->
      <ItemGroup>
        <HelixAvailableTargetQueue Include="Ubuntu.2004.Amd64.Open" Platform="Linux" />
        <HelixAvailableTargetQueue Include="OSX.15.Amd64.Open" Platform="OSX" />
        <HelixAvailableTargetQueue Include="Windows.11.Amd64.Client.Open" Platform="Windows" />
      </ItemGroup>
    </When>
    <Otherwise>
      <!-- aspnetcore-helix-matrix[-internal] (helix-matrix.yml) and RunHelix.ps1 -->
      <!-- aspnetcore-quarantined-tests (quarantined-tests.yml) and RunHelix.ps1 -RunQuarantinedTests -->
      <ItemGroup>
        <!-- Linux -->
        <HelixAvailableTargetQueue Include="$(HelixQueueAlmaLinux)" Platform="Linux" />

        <!-- Containers -->
        <HelixAvailableTargetQueue Include="$(HelixQueueAlpine)" Platform="Linux" />
        <HelixAvailableTargetQueue Include="$(HelixQueueAzureLinux)" Platform="Linux" />
        <HelixAvailableTargetQueue Include="$(HelixQueueDebian)" Platform="Linux" />
        <HelixAvailableTargetQueue Include="$(HelixQueueFedora)" Platform="Linux" />
        <!-- Arm64 -->
        <HelixAvailableTargetQueue Include="$(HelixQueueArmDebian)" Platform="Linux" />

        <!-- Mac -->
        <HelixAvailableTargetQueue Include="OSX.15.Amd64.Open" Platform="OSX" />

        <!-- Windows -->
        <HelixAvailableTargetQueue Include="Windows.Amd64.Server2022.Open" Platform="Windows" />
        <HelixAvailableTargetQueue Include="Windows.Amd64.VS2022.Pre.Open" Platform="Windows" />

        <!-- IIS Express isn't supported on arm64 and most of the IsWindowsOnlyTests depend on its setup scripts. -->
        <HelixAvailableTargetQueue Include="windows.11.arm64.open" Platform="Windows"
            Condition=" '$(IsWindowsOnlyTest)' != 'true' "/>
      </ItemGroup>
    </Otherwise>
  </Choose>

  <Choose>
    <When Condition=" '$(HelixTargetQueue)' == '' ">
      <PropertyGroup>
        <IsArm64HelixQueue>false</IsArm64HelixQueue>
        <IsWindowsHelixQueue>false</IsWindowsHelixQueue>
        <IsMacHelixQueue>false</IsMacHelixQueue>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <IsArm64HelixQueue>$(HelixTargetQueue.ToUpperInvariant().Contains('ARM64'))</IsArm64HelixQueue>
        <IsWindowsHelixQueue>$(HelixTargetQueue.ToUpperInvariant().Contains('WINDOWS'))</IsWindowsHelixQueue>
        <IsMacHelixQueue>$(HelixTargetQueue.ToUpperInvariant().Contains('OSX'))</IsMacHelixQueue>
      </PropertyGroup>
    </Otherwise>
  </Choose>
</Project>
