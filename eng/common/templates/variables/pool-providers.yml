# Select a pool provider based off branch name. Anything with branch name containing 'release' must go into an -Svc pool,
# otherwise it should go into the "normal" pools. This separates out the queueing and billing of released branches.

# Motivation:
#   Once a given branch of a repository's output has been officially "shipped" once, it is then considered to be COGS
#   (Cost of goods sold) and should be moved to a servicing pool provider. This allows both separation of queueing
#   (allowing release builds and main PR builds to not intefere with each other) and billing (required for COGS.
#   Additionally, the pool provider name itself may be subject to change when the .NET Core Engineering Services
#   team needs to move resources around and create new and potentially differently-named pools. Using this template
#   file from an Arcade-ified repo helps guard against both having to update one's release/* branches and renaming.

# How to use:
#  This yaml assumes your shipped product branches use the naming convention "release/..." (which many do).
#  If we find alternate naming conventions in broad usage it can be added to the condition below.
#
#  First, import the template in an arcade-ified repo to pick up the variables, e.g.:
#
#  variables:
#  - template: /eng/common/templates/variables/pool-providers.yml
#
#  ... then anywhere specifying the pool provider use the runtime variables,
#      $(DncEngInternalBuildPool) and $  (DncEngPublicBuildPool), e.g.:
#
#        pool:
#           name: $(DncEngInternalBuildPool)
#           demands: ImageOverride -equals windows.vs2019.amd64
variables:
  - ${{ if eq(variables['System.TeamProject'], 'internal') }}:
    - template: /eng/common/templates-official/variables/pool-providers.yml
  - ${{ else }}:
    # Coalesce the target and source branches so we know when a PR targets a release branch
    # If these variables are somehow missing, fall back to main (tends to have more capacity)

    # Any new -Svc alternative pools should have variables added here to allow for splitting work
    - name: DncEngPublicBuildPool
      value: $[
          replace(
            replace(
              eq(contains(coalesce(variables['System.PullRequest.TargetBranch'], variables['Build.SourceBranch'], 'refs/heads/main'), 'release'), 'true'),
              True,
              'NetCore-Svc-Public'
            ),
            False,
            'NetCore-Public'
          )
        ]

    - name: DncEngInternalBuildPool
      value: $[
          replace(
            replace(
              eq(contains(coalesce(variables['System.PullRequest.TargetBranch'], variables['Build.SourceBranch'], 'refs/heads/main'), 'release'), 'true'),
              True,
              'NetCore1ESPool-Svc-Internal'
            ),
            False,
            'NetCore1ESPool-Internal'
          )
        ]
