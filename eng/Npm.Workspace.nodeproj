<Project DefaultTargets="Build">

  <!-- Import Directory.Build.Props -->
  <Import Project="$(MSBuildThisFileDirectory)..\Directory.Build.props" />

  <PropertyGroup>
    <IsShippingPackage>true</IsShippingPackage>
    <!-- This explicitly includes this project even though it's a test project, unit test project,
         etc. which would be excluded by default. -->
    <ExcludeFromDotNetBuild>false</ExcludeFromDotNetBuild>
    <IsTestProject>true</IsTestProject>
    <IsUnitTestProject>true</IsUnitTestProject>
    <TestDependsOnAspNetPackages>false</TestDependsOnAspNetPackages>
    <TestDependsOnAspNetAppPackages>false</TestDependsOnAspNetAppPackages>
    <TestDependsOnAspNetRuntime>false</TestDependsOnAspNetRuntime>
    <ContainsFunctionalTestAssets>false</ContainsFunctionalTestAssets>
    <BuildHelixPayload>false</BuildHelixPayload>
    <!-- Skip puppeteer tests until https://github.com/dotnet/aspnetcore/issues/54176 is resolved -->
    <_NpmAdditionalEnvironmentVariables>PUPPETEER_SKIP_DOWNLOAD=1</_NpmAdditionalEnvironmentVariables>
  </PropertyGroup>

  <PropertyGroup>
    <NpmWorkspaceRoot>$(MSBuildThisFileDirectory)..</NpmWorkspaceRoot>
    <NodeModulesMarkerFile>$(NpmWorkspaceRoot)\node_modules\.package-lock.json</NodeModulesMarkerFile>
  </PropertyGroup>

  <!-- Input files for incremental restore check -->
  <ItemGroup>
    <NpmInputFiles Include="$(NpmWorkspaceRoot)\package.json" />
    <NpmInputFiles Include="$(NpmWorkspaceRoot)\package-lock.json" Condition="Exists('$(NpmWorkspaceRoot)\package-lock.json')" />
    <NpmInputFiles Include="$(NpmWorkspaceRoot)\src\**\package.json" Exclude="$(NpmWorkspaceRoot)\src\**\node_modules\**\package.json" />
    <NpmInputFiles Include="$(NpmWorkspaceRoot)\.npmrc" Condition="Exists('$(NpmWorkspaceRoot)\.npmrc')" />
  </ItemGroup>

  <!-- Output files for incremental restore check -->
  <ItemGroup>
    <NpmOutputFiles Include="$(NodeModulesMarkerFile)" />
  </ItemGroup>

  <!-- Output files for incremental build check -->
  <ItemGroup>
    <!-- Main build outputs - dist directories in workspace projects -->
    <NpmBuildOutputFiles Include="$(NpmWorkspaceRoot)\src\SignalR\clients\ts\signalr\dist\**\*" Exclude="**\.gitignore;**\.gitattributes"  />
    <NpmBuildOutputFiles Include="$(NpmWorkspaceRoot)\src\SignalR\clients\ts\signalr-protocol-msgpack\dist\**\*" Exclude="**\.gitignore;**\.gitattributes" />
    <NpmBuildOutputFiles Include="$(NpmWorkspaceRoot)\src\JSInterop\Microsoft.JSInterop.JS\src\dist\**\*" Exclude="**\.gitignore;**\.gitattributes" />
    <NpmBuildOutputFiles Include="$(NpmWorkspaceRoot)\src\Components\Web.JS\dist\**\*" Exclude="**\.gitignore;**\.gitattributes" />
    <NpmBuildOutputFiles Include="$(NpmWorkspaceRoot)\src\Components\WebAssembly\WebAssembly.Authentication\src\Interop\dist\**\*" Exclude="**\.gitignore;**\.gitattributes" />
    <NpmBuildOutputFiles Include="$(NpmWorkspaceRoot)\src\Components\WebAssembly\Authentication.Msal\src\Interop\dist\**\*" Exclude="**\.gitignore;**\.gitattributes" />
    <NpmBuildOutputFiles Include="$(NpmWorkspaceRoot)\src\Components\CustomElements\src\js\dist\**\*" Exclude="**\.gitignore;**\.gitattributes" />

    <!-- FunctionalTests outputs -->
    <NpmBuildOutputFiles Include="$(NpmWorkspaceRoot)\src\SignalR\clients\ts\FunctionalTests\wwwroot\dist\**\*" />
  </ItemGroup>

  <!-- Input files for incremental build check -->
  <ItemGroup>
    <!-- Source files -->
    <NpmBuildInputFiles Include="$(NpmWorkspaceRoot)\src\**\*.ts" Exclude="@(NpmBuildOutputFiles);**\pkg-version.ts;$(NpmWorkspaceRoot)\src\**\node_modules\**\*;$(NpmWorkspaceRoot)\src\**\bin\**\*;$(NpmWorkspaceRoot)\src\**\obj\**\*" />
    <NpmBuildInputFiles Include="$(NpmWorkspaceRoot)\src\**\*.js" Exclude="@(NpmBuildOutputFiles);**\pkg-version.ts;**\samples\**\wwwroot\lib\**\*;**\FunctionalTests\wwwroot\lib\**\*;$(NpmWorkspaceRoot)\src\**\node_modules\**\*;$(NpmWorkspaceRoot)\src\**\dist\**\*;$(NpmWorkspaceRoot)\src\**\bin\**\*;$(NpmWorkspaceRoot)\src\**\obj\**\*" />
    <NpmBuildInputFiles Include="$(NpmWorkspaceRoot)\src\**\*.mjs" Exclude="@(NpmBuildOutputFiles);**\pkg-version.ts;$(NpmWorkspaceRoot)\src\**\node_modules\**\*;$(NpmWorkspaceRoot)\src\**\dist\**\*;$(NpmWorkspaceRoot)\src\**\bin\**\*;$(NpmWorkspaceRoot)\src\**\obj\**\*" />

    <!-- Configuration files -->
    <NpmBuildInputFiles Include="$(NpmWorkspaceRoot)\src\**\package.json" Exclude="@(NpmBuildOutputFiles);**\pkg-version.ts;$(NpmWorkspaceRoot)\src\**\node_modules\**\package.json;$(NpmWorkspaceRoot)\src\**\bin\**\*;$(NpmWorkspaceRoot)\src\**\obj\**\*" />
    <NpmBuildInputFiles Include="$(NpmWorkspaceRoot)\src\**\tsconfig*.json" Exclude="@(NpmBuildOutputFiles);**\pkg-version.ts;$(NpmWorkspaceRoot)\src\**\node_modules\**\*;$(NpmWorkspaceRoot)\src\**\bin\**\*;$(NpmWorkspaceRoot)\src\**\obj\**\*" />
    <NpmBuildInputFiles Include="$(NpmWorkspaceRoot)\src\**\rollup.config.*" Exclude="@(NpmBuildOutputFiles);**\pkg-version.ts;$(NpmWorkspaceRoot)\src\**\node_modules\**\*;$(NpmWorkspaceRoot)\src\**\bin\**\*;$(NpmWorkspaceRoot)\src\**\obj\**\*" />
    <NpmBuildInputFiles Include="$(NpmWorkspaceRoot)\src\**\webpack.config.*" Exclude="@(NpmBuildOutputFiles);**\pkg-version.ts;$(NpmWorkspaceRoot)\src\**\node_modules\**\*;$(NpmWorkspaceRoot)\src\**\bin\**\*;$(NpmWorkspaceRoot)\src\**\obj\**\*" />
    <NpmBuildInputFiles Include="$(NpmWorkspaceRoot)\src\**\jest.config.*" Exclude="@(NpmBuildOutputFiles);**\pkg-version.ts;$(NpmWorkspaceRoot)\src\**\node_modules\**\*;$(NpmWorkspaceRoot)\src\**\bin\**\*;$(NpmWorkspaceRoot)\src\**\obj\**\*" />

    <!-- Root workspace configuration files that affect build -->
    <NpmBuildInputFiles Include="$(NpmWorkspaceRoot)\package.json" />
    <NpmBuildInputFiles Include="$(NpmWorkspaceRoot)\tsconfig*.json" />
  </ItemGroup>


  <Target Name="Restore" Inputs="@(NpmInputFiles)" Outputs="@(NpmOutputFiles)">
    <Message Text="Restoring NPM packages..." Importance="high" />
    <Exec
      Command="npm ci"
      WorkingDirectory="$(NpmWorkspaceRoot)"
      EnvironmentVariables="$(_NpmAdditionalEnvironmentVariables)" />
  </Target>

  <Target Name="Build" DependsOnTargets="Restore" Inputs="@(NpmBuildInputFiles)" Outputs="@(NpmBuildOutputFiles)">
    <PropertyGroup>
      <PackageVersion>$(VersionPrefix)</PackageVersion>
      <PackageVersion Condition="'$(VersionSuffix)' != ''">$(VersionPrefix)-$(VersionSuffix)</PackageVersion>
    </PropertyGroup>
    <MakeDir Directories="$(IntermediateOutputPath)" Condition="!Exists('$(IntermediateOutputPath)')" />

    <Message Text="Building NPM packages..." Importance="high" />

    <Exec
      Command="node $(MSBuildThisFileDirectory)scripts/npm/pack-workspace.mjs --update-versions $(RepoRoot)package.json $(PackageVersion) $(PackageOutputPath) $(IntermediateOutputPath)"
      EnvironmentVariables="$(_NpmAdditionalEnvironmentVariables)" />

    <Exec
      Command="npm run build"
      WorkingDirectory="$(MSBuildThisFileDirectory).."
      />
  </Target>

  <Target Name="_Test" BeforeTargets="Test">
    <Message Text="Testing NPM packages..." Importance="high" />
    <Exec Command="npm run test" ContinueOnError="true" WorkingDirectory="$(MSBuildThisFileDirectory).." />
  </Target>

  <Target Name="Pack">
    <PropertyGroup>
      <PackageVersion>$(VersionPrefix)</PackageVersion>
      <PackageVersion Condition="'$(VersionSuffix)' != ''">$(VersionPrefix)-$(VersionSuffix)</PackageVersion>
    </PropertyGroup>
    <Message Text="Packing NPM packages..." Importance="high" />
    <MakeDir Directories="$(PackageOutputPath)" Condition="!Exists('$(PackageOutputPath)')" />
    <MakeDir Directories="$(IntermediateOutputPath)" Condition="!Exists('$(IntermediateOutputPath)')" />

    <Exec
      Command="node $(MSBuildThisFileDirectory)scripts/npm/pack-workspace.mjs --create-packages $(RepoRoot)package.json $(PackageVersion) $(PackageOutputPath) $(IntermediateOutputPath)"
      EnvironmentVariables="$(_NpmAdditionalEnvironmentVariables)" />
    <ItemGroup>
      <_NpmGeneratedPackages Include="$(PackageOutputPath)/*.tgz" />
    </ItemGroup>
    <PropertyGroup>
      <_NpmFiles>@(_NpmGeneratedPackages->'ðŸ“¦ $(PackageOutputPath)%(FileName)%(Extension)', '%0a  ')</_NpmFiles>
    </PropertyGroup>
    <Message Importance="High" Text="$(MSBuildProjectName) -> %0a%20%20$(_NpmFiles)" />
  </Target>

  <!-- Import Directory.Build.targets -->
  <Import Project="$(MSBuildThisFileDirectory)..\Directory.Build.targets" />

</Project>
