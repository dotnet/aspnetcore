#nullable enable
Microsoft.AspNetCore.Hosting.KestrelServerOptionsSystemdExtensions
Microsoft.AspNetCore.Hosting.ListenOptionsConnectionLoggingExtensions
Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException
Microsoft.AspNetCore.Server.Kestrel.Core.BadHttpRequestException.StatusCode.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IConnectionTimeoutFeature
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IConnectionTimeoutFeature.CancelTimeout() -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IConnectionTimeoutFeature.ResetTimeout(System.TimeSpan timeSpan) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IConnectionTimeoutFeature.SetTimeout(System.TimeSpan timeSpan) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IDecrementConcurrentConnectionCountFeature
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IDecrementConcurrentConnectionCountFeature.ReleaseConnection() -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IHttp2StreamIdFeature
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IHttp2StreamIdFeature.StreamId.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IHttpMinRequestBodyDataRateFeature
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IHttpMinRequestBodyDataRateFeature.MinDataRate.get -> Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate?
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IHttpMinRequestBodyDataRateFeature.MinDataRate.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IHttpMinResponseDataRateFeature
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IHttpMinResponseDataRateFeature.MinDataRate.get -> Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate?
Microsoft.AspNetCore.Server.Kestrel.Core.Features.IHttpMinResponseDataRateFeature.MinDataRate.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Features.ISslStreamFeature
Microsoft.AspNetCore.Server.Kestrel.Core.Features.ISslStreamFeature.SslStream.get -> System.Net.Security.SslStream!
Microsoft.AspNetCore.Server.Kestrel.Core.Features.ITlsApplicationProtocolFeature
Microsoft.AspNetCore.Server.Kestrel.Core.Features.ITlsApplicationProtocolFeature.ApplicationProtocol.get -> System.ReadOnlyMemory<byte>
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.HeaderTableSize.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.HeaderTableSize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.Http2Limits() -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.InitialConnectionWindowSize.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.InitialConnectionWindowSize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.InitialStreamWindowSize.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.InitialStreamWindowSize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.KeepAlivePingDelay.get -> System.TimeSpan
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.KeepAlivePingDelay.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.KeepAlivePingTimeout.get -> System.TimeSpan
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.KeepAlivePingTimeout.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.MaxFrameSize.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.MaxFrameSize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.MaxRequestHeaderFieldSize.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.MaxRequestHeaderFieldSize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.MaxStreamsPerConnection.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits.MaxStreamsPerConnection.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Http3Limits
Microsoft.AspNetCore.Server.Kestrel.Core.Http3Limits.Http3Limits() -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Http3Limits.MaxRequestHeaderFieldSize.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Http3Limits.MaxRequestHeaderFieldSize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols
Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.Http1 = 1 -> Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols
Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.Http1AndHttp2 = Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.Http1 | Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.Http2 -> Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols
Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.Http1AndHttp2AndHttp3 = Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.Http1AndHttp2 | Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.Http3 -> Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols
Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.Http2 = 2 -> Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols
Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.Http3 = 4 -> Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols
Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols.None = 0 -> Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.Connect = 7 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.Custom = 9 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.Delete = 2 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.Get = 0 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.Head = 4 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.None = 255 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.Options = 8 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.Patch = 6 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.Post = 3 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.Put = 1 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod.Trace = 5 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser<TRequestHandler>
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser<TRequestHandler>.HttpParser() -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser<TRequestHandler>.HttpParser(bool showErrorDetails) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser<TRequestHandler>.ParseHeaders(TRequestHandler handler, ref System.Buffers.SequenceReader<byte> reader) -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpParser<TRequestHandler>.ParseRequestLine(TRequestHandler handler, ref System.Buffers.SequenceReader<byte> reader) -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpScheme
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpScheme.Http = 0 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpScheme
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpScheme.Https = 1 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpScheme
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpScheme.Unknown = -1 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpScheme
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion.Http10 = 0 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion.Http11 = 1 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion.Http2 = 2 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion.Http3 = 3 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion.Unknown = -1 -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersionAndMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersionAndMethod.HttpVersionAndMethod() -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersionAndMethod.HttpVersionAndMethod(Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod method, int methodEnd) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersionAndMethod.Method.get -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpMethod
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersionAndMethod.MethodEnd.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersionAndMethod.Version.get -> Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersion
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersionAndMethod.Version.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpHeadersHandler
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpHeadersHandler.OnHeader(System.ReadOnlySpan<byte> name, System.ReadOnlySpan<byte> value) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpHeadersHandler.OnHeadersComplete(bool endStream) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpHeadersHandler.OnStaticIndexedHeader(int index) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpHeadersHandler.OnStaticIndexedHeader(int index, System.ReadOnlySpan<byte> value) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpRequestLineHandler
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpRequestLineHandler.OnStartLine(Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpVersionAndMethod versionAndMethod, Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.TargetOffsetPathLength targetPath, System.Span<byte> startLine) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.TargetOffsetPathLength
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.TargetOffsetPathLength.IsEncoded.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.TargetOffsetPathLength.Length.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.TargetOffsetPathLength.Offset.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.TargetOffsetPathLength.TargetOffsetPathLength() -> void
Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.TargetOffsetPathLength.TargetOffsetPathLength(int offset, int length, bool isEncoded) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.Dispose() -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.Features.get -> Microsoft.AspNetCore.Http.Features.IFeatureCollection!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.KestrelServer(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions!>! options, Microsoft.AspNetCore.Connections.IConnectionListenerFactory! transportFactory, Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.Options.get -> Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync<TContext>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>! application, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StopAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.Http2.get -> Microsoft.AspNetCore.Server.Kestrel.Core.Http2Limits!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.Http3.get -> Microsoft.AspNetCore.Server.Kestrel.Core.Http3Limits!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.KeepAliveTimeout.get -> System.TimeSpan
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.KeepAliveTimeout.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.KestrelServerLimits() -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxConcurrentConnections.get -> long?
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxConcurrentConnections.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxConcurrentUpgradedConnections.get -> long?
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxConcurrentUpgradedConnections.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxRequestBodySize.get -> long?
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxRequestBodySize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxRequestBufferSize.get -> long?
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxRequestBufferSize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxRequestHeaderCount.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxRequestHeaderCount.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxRequestHeadersTotalSize.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxRequestHeadersTotalSize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxRequestLineSize.get -> int
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxRequestLineSize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxResponseBufferSize.get -> long?
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MaxResponseBufferSize.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MinRequestBodyDataRate.get -> Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate?
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MinRequestBodyDataRate.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MinResponseDataRate.get -> Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate?
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.MinResponseDataRate.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.RequestHeadersTimeout.get -> System.TimeSpan
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits.RequestHeadersTimeout.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.AddServerHeader.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.AddServerHeader.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.AllowAlternateSchemes.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.AllowAlternateSchemes.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.AllowHostHeaderOverride.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.AllowHostHeaderOverride.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.AllowResponseHeaderCompression.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.AllowResponseHeaderCompression.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.AllowSynchronousIO.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.AllowSynchronousIO.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ApplicationServices.get -> System.IServiceProvider!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ApplicationServices.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ConfigurationLoader.get -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader?
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ConfigurationLoader.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.Configure() -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.Configure(Microsoft.Extensions.Configuration.IConfiguration! config) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.Configure(Microsoft.Extensions.Configuration.IConfiguration! config, bool reloadOnChange) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ConfigureEndpointDefaults(System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configureOptions) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ConfigureHttpsDefaults(System.Action<Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions!>! configureOptions) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.DisableStringReuse.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.DisableStringReuse.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.EnableAltSvc.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.EnableAltSvc.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.KestrelServerOptions() -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.Limits.get -> Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerLimits!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.Listen(System.Net.EndPoint! endPoint) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.Listen(System.Net.EndPoint! endPoint, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.Listen(System.Net.IPAddress! address, int port) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.Listen(System.Net.IPAddress! address, int port, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.Listen(System.Net.IPEndPoint! endPoint) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.Listen(System.Net.IPEndPoint! endPoint, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenAnyIP(int port) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenAnyIP(int port, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenHandle(ulong handle) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenHandle(ulong handle, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenLocalhost(int port) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenLocalhost(int port, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenNamedPipe(string! pipeName) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenNamedPipe(string! pipeName, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenUnixSocket(string! socketPath) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ListenUnixSocket(string! socketPath, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.RequestHeaderEncodingSelector.get -> System.Func<string!, System.Text.Encoding?>!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.RequestHeaderEncodingSelector.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ResponseHeaderEncodingSelector.get -> System.Func<string!, System.Text.Encoding?>!
Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions.ResponseHeaderEncodingSelector.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.ApplicationServices.get -> System.IServiceProvider!
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.Build() -> Microsoft.AspNetCore.Connections.ConnectionDelegate!
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.DisableAltSvcHeader.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.DisableAltSvcHeader.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.EndPoint.get -> System.Net.EndPoint!
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.FileHandle.get -> ulong
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.IPEndPoint.get -> System.Net.IPEndPoint?
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.KestrelServerOptions.get -> Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions!
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.PipeName.get -> string?
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.Protocols.get -> Microsoft.AspNetCore.Server.Kestrel.Core.HttpProtocols
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.Protocols.set -> void
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.SocketPath.get -> string?
Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.Use(System.Func<Microsoft.AspNetCore.Connections.ConnectionDelegate!, Microsoft.AspNetCore.Connections.ConnectionDelegate!>! middleware) -> Microsoft.AspNetCore.Connections.IConnectionBuilder!
Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate
Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate.BytesPerSecond.get -> double
Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate.GracePeriod.get -> System.TimeSpan
Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate.MinDataRate(double bytesPerSecond, System.TimeSpan gracePeriod) -> void
Microsoft.AspNetCore.Server.Kestrel.EndpointConfiguration
Microsoft.AspNetCore.Server.Kestrel.EndpointConfiguration.ConfigSection.get -> Microsoft.Extensions.Configuration.IConfigurationSection!
Microsoft.AspNetCore.Server.Kestrel.EndpointConfiguration.HttpsOptions.get -> Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions!
Microsoft.AspNetCore.Server.Kestrel.EndpointConfiguration.IsHttps.get -> bool
Microsoft.AspNetCore.Server.Kestrel.EndpointConfiguration.ListenOptions.get -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
Microsoft.AspNetCore.Server.Kestrel.Https.CertificateLoader
Microsoft.AspNetCore.Server.Kestrel.Https.ClientCertificateMode
Microsoft.AspNetCore.Server.Kestrel.Https.ClientCertificateMode.AllowCertificate = 1 -> Microsoft.AspNetCore.Server.Kestrel.Https.ClientCertificateMode
Microsoft.AspNetCore.Server.Kestrel.Https.ClientCertificateMode.DelayCertificate = 3 -> Microsoft.AspNetCore.Server.Kestrel.Https.ClientCertificateMode
Microsoft.AspNetCore.Server.Kestrel.Https.ClientCertificateMode.NoCertificate = 0 -> Microsoft.AspNetCore.Server.Kestrel.Https.ClientCertificateMode
Microsoft.AspNetCore.Server.Kestrel.Https.ClientCertificateMode.RequireCertificate = 2 -> Microsoft.AspNetCore.Server.Kestrel.Https.ClientCertificateMode
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.AllowAnyClientCertificate() -> void
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.CheckCertificateRevocation.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.CheckCertificateRevocation.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.ClientCertificateMode.get -> Microsoft.AspNetCore.Server.Kestrel.Https.ClientCertificateMode
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.ClientCertificateMode.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.ClientCertificateValidation.get -> System.Func<System.Security.Cryptography.X509Certificates.X509Certificate2!, System.Security.Cryptography.X509Certificates.X509Chain?, System.Net.Security.SslPolicyErrors, bool>?
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.ClientCertificateValidation.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.HandshakeTimeout.get -> System.TimeSpan
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.HandshakeTimeout.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.HttpsConnectionAdapterOptions() -> void
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.OnAuthenticate.get -> System.Action<Microsoft.AspNetCore.Connections.ConnectionContext!, System.Net.Security.SslServerAuthenticationOptions!>?
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.OnAuthenticate.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.ServerCertificate.get -> System.Security.Cryptography.X509Certificates.X509Certificate2?
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.ServerCertificate.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.ServerCertificateChain.get -> System.Security.Cryptography.X509Certificates.X509Certificate2Collection?
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.ServerCertificateChain.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.ServerCertificateSelector.get -> System.Func<Microsoft.AspNetCore.Connections.ConnectionContext?, string?, System.Security.Cryptography.X509Certificates.X509Certificate2?>?
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.ServerCertificateSelector.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.SslProtocols.get -> System.Security.Authentication.SslProtocols
Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions.SslProtocols.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackContext
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackContext.AllowDelayedClientCertificateNegotation.get -> bool
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackContext.AllowDelayedClientCertificateNegotation.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackContext.CancellationToken.get -> System.Threading.CancellationToken
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackContext.ClientHelloInfo.get -> System.Net.Security.SslClientHelloInfo
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackContext.Connection.get -> Microsoft.AspNetCore.Connections.ConnectionContext!
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackContext.SslStream.get -> System.Net.Security.SslStream!
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackContext.State.get -> object?
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackContext.TlsHandshakeCallbackContext() -> void
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackOptions
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackOptions.HandshakeTimeout.get -> System.TimeSpan
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackOptions.HandshakeTimeout.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackOptions.OnConnection.get -> System.Func<Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackContext!, System.Threading.Tasks.ValueTask<System.Net.Security.SslServerAuthenticationOptions!>>!
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackOptions.OnConnection.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackOptions.OnConnectionState.get -> object?
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackOptions.OnConnectionState.set -> void
Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackOptions.TlsHandshakeCallbackOptions() -> void
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.AnyIPEndpoint(int port) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.AnyIPEndpoint(int port, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Configuration.get -> Microsoft.Extensions.Configuration.IConfiguration!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Endpoint(string! name, System.Action<Microsoft.AspNetCore.Server.Kestrel.EndpointConfiguration!>! configureOptions) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Endpoint(System.Net.IPAddress! address, int port) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Endpoint(System.Net.IPAddress! address, int port, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Endpoint(System.Net.IPEndPoint! endPoint) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Endpoint(System.Net.IPEndPoint! endPoint, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.HandleEndpoint(ulong handle) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.HandleEndpoint(ulong handle, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Load() -> void
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LocalhostEndpoint(int port) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LocalhostEndpoint(int port, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.NamedPipeEndpoint(string! pipeName) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.NamedPipeEndpoint(string! pipeName, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Options.get -> Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.UnixSocketEndpoint(string! socketPath) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.UnixSocketEndpoint(string! socketPath, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader!
override Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.ToString() -> string?
override Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate.ToString() -> string!
static Microsoft.AspNetCore.Hosting.KestrelServerOptionsSystemdExtensions.UseSystemd(this Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions! options) -> Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions!
static Microsoft.AspNetCore.Hosting.KestrelServerOptionsSystemdExtensions.UseSystemd(this Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions! options, System.Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!>! configure) -> Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsConnectionLoggingExtensions.UseConnectionLogging(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsConnectionLoggingExtensions.UseConnectionLogging(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, string? loggerName) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions! httpsOptions) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, Microsoft.AspNetCore.Server.Kestrel.Https.TlsHandshakeCallbackOptions! callbackOptions) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, string! fileName) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, string! fileName, string? password) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, string! fileName, string? password, System.Action<Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions!>! configureOptions) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, System.Action<Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions!>! configureOptions) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, System.Net.Security.ServerOptionsSelectionCallback! serverOptionsSelectionCallback, object! state) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, System.Net.Security.ServerOptionsSelectionCallback! serverOptionsSelectionCallback, object! state, System.TimeSpan handshakeTimeout) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, System.Security.Cryptography.X509Certificates.StoreName storeName, string! subject) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, System.Security.Cryptography.X509Certificates.StoreName storeName, string! subject, bool allowInvalid) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, System.Security.Cryptography.X509Certificates.StoreName storeName, string! subject, bool allowInvalid, System.Security.Cryptography.X509Certificates.StoreLocation location) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, System.Security.Cryptography.X509Certificates.StoreName storeName, string! subject, bool allowInvalid, System.Security.Cryptography.X509Certificates.StoreLocation location, System.Action<Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions!>! configureOptions) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, System.Security.Cryptography.X509Certificates.X509Certificate2! serverCertificate) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(this Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions! listenOptions, System.Security.Cryptography.X509Certificates.X509Certificate2! serverCertificate, System.Action<Microsoft.AspNetCore.Server.Kestrel.Https.HttpsConnectionAdapterOptions!>! configureOptions) -> Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions!
static Microsoft.AspNetCore.Server.Kestrel.Https.CertificateLoader.LoadFromStoreCert(string! subject, string! storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, bool allowInvalid) -> System.Security.Cryptography.X509Certificates.X509Certificate2!
