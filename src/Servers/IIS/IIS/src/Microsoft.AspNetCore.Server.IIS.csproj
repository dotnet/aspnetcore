<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <IsAspNetCoreApp>true</IsAspNetCoreApp>
    <PackageId>Microsoft.AspNetCore.Server.IIS</PackageId>
    <Description>Provides support for hosting ASP.NET Core in IIS using the AspNetCoreModule.</Description>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackageTags>aspnetcore;iis</PackageTags>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <NativeAssetsTargetFramework>$(DefaultNetCoreTargetFramework)</NativeAssetsTargetFramework>
    <IsPackable>false</IsPackable>
    <IsTrimmable>true</IsTrimmable>

    <!-- Ignore platform compatibility warnings for this project. We know this only works on windows.-->
    <!-- Ignore warnings about 'ref' vs 'in' in generated code. -->
    <NoWarn>$(NoWarn);CA1416;CS9195</NoWarn>
  </PropertyGroup>

  <ItemGroup Condition="'$(DotNetBuildSourceOnly)' != 'true'">
    <Compile Include="$(SharedSourceRoot)TypeNameHelper\*.cs" />
    <Compile Include="$(SharedSourceRoot)Buffers.MemoryPool\**\*.cs" LinkBase="Shared\" />
    <Compile Include="$(SharedSourceRoot)HttpSys\**\*.cs" LinkBase="Shared\" />
    <Compile Include="$(SharedSourceRoot)StackTrace\**\*.cs" LinkBase="Shared\" />
    <Compile Include="$(SharedSourceRoot)RazorViews\*.cs" LinkBase="Shared\" />
    <Compile Include="$(SharedSourceRoot)ErrorPage\*.cs" LinkBase="Shared\" />
    <Compile Include="$(SharedSourceRoot)TaskToApm.cs" Link="Shared\TaskToApm.cs" />
    <Compile Include="$(SharedSourceRoot)ServerInfrastructure\*.cs" LinkBase="Shared\" />
    <Compile Include="$(SharedSourceRoot)ValueTaskExtensions\**\*.cs" LinkBase="Shared\" />
    <Compile Include="$(SharedSourceRoot)Debugger\DictionaryItemDebugView.cs" LinkBase="Shared" />
    <Compile Include="$(SharedSourceRoot)Debugger\StringValuesDictionaryDebugView.cs" LinkBase="Shared" />
    <Compile Remove="SourceBuildStubs.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(DotNetBuildSourceOnly)' == 'true'">
    <Compile Remove="**\*.cs" />
    <Compile Include="SourceBuildStubs.cs" />
  </ItemGroup>

  <Target Name="ValidateNativeComponentsBuilt" AfterTargets="Build" >
    <Error Text="Required dll from ANCM has not been built. To build ANCM, you must use MSBuild.exe."
        Condition="'$(UseIisNativeAssets)' == 'true' AND !Exists('$(AspNetCoreModuleV2InProcessHandlerDll)')" />
  </Target>

  <ItemGroup Condition=" '$(UseIisNativeAssets)' == 'true' ">
    <NativeProjectReference Include="$(MSBuildThisFileDirectory)..\..\AspNetCoreModuleV2\InProcessRequestHandler\InProcessRequestHandler.vcxproj" Platform="x64" />
    <NativeProjectReference Include="$(MSBuildThisFileDirectory)..\..\AspNetCoreModuleV2\InProcessRequestHandler\InProcessRequestHandler.vcxproj" Platform="Win32" />
    <NativeProjectReference Include="$(MSBuildThisFileDirectory)..\..\AspNetCoreModuleV2\InProcessRequestHandler\InProcessRequestHandler.vcxproj" Platform="ARM64" />

    <UpToDateCheckInput Include="$(AspNetCoreModuleV2InProcessHandlerDll)" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.AspNetCore.Authentication.Core" />
    <Reference Include="Microsoft.AspNetCore.Connections.Abstractions" />
    <Reference Include="Microsoft.AspNetCore.Hosting.Abstractions" />
    <Reference Include="Microsoft.AspNetCore.Http.Extensions" />
    <Reference Include="Microsoft.AspNetCore.Http.Features" />
    <Reference Include="Microsoft.AspNetCore.Server.HttpSys" />
    <Reference Include="Microsoft.Extensions.FileProviders.Physical" />
    <Reference Include="Microsoft.Windows.CsWin32" Condition="'$(DotNetBuildSourceOnly)' != 'true'">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </Reference>
    <Reference Include="System.IO.Pipelines" />
  </ItemGroup>

  <Import Project="..\..\build\assets.props" />
  <ItemGroup>
    <UpToDateCheckInput Include="@(InProcessComponents)" />
  </ItemGroup>

  <Target Name="AddPackNativeComponents" BeforeTargets="_GetPackageFiles" Condition="'$(PackNativeAssets)' == 'true'">
    <ItemGroup>
      <None Include="%(InProcessComponents.DllLocation)"
            Pack="true"
            PackagePath="runtimes/win-%(InProcessComponents.Platform)/nativeassets/$(NativeAssetsTargetFramework)" />
    </ItemGroup>
  </Target>

  <Target Name="AddRunNativeComponents"
          BeforeTargets="AssignTargetPaths"
          DependsOnTargets="DebugSymbolsProjectOutputGroup"
          Condition="'$(PackNativeAssets)' == 'true'">
    <ItemGroup>
      <None Include="%(InProcessComponents.DllLocation)" CopyToPublishDirectory="PreserveNewest" CopyToOutputDirectory="PreserveNewest" Condition="Exists('%(InProcessComponents.DllLocation)')" Link="%(InProcessComponents.Platform)\%(InProcessComponents.NativeAsset).dll" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Server.IISIntegration.Tests" />
    <InternalsVisibleTo Include="IIS.Tests" />
  </ItemGroup>
</Project>
