#nullable enable
Microsoft.AspNetCore.Http.Connections.AvailableTransport
Microsoft.AspNetCore.Http.Connections.AvailableTransport.AvailableTransport() -> void
Microsoft.AspNetCore.Http.Connections.AvailableTransport.TransferFormats.get -> System.Collections.Generic.IList<string!>?
Microsoft.AspNetCore.Http.Connections.AvailableTransport.TransferFormats.set -> void
Microsoft.AspNetCore.Http.Connections.AvailableTransport.Transport.get -> string?
Microsoft.AspNetCore.Http.Connections.AvailableTransport.Transport.set -> void
Microsoft.AspNetCore.Http.Connections.HttpTransports
Microsoft.AspNetCore.Http.Connections.HttpTransportType
Microsoft.AspNetCore.Http.Connections.HttpTransportType.LongPolling = 4 -> Microsoft.AspNetCore.Http.Connections.HttpTransportType
Microsoft.AspNetCore.Http.Connections.HttpTransportType.None = 0 -> Microsoft.AspNetCore.Http.Connections.HttpTransportType
Microsoft.AspNetCore.Http.Connections.HttpTransportType.ServerSentEvents = 2 -> Microsoft.AspNetCore.Http.Connections.HttpTransportType
Microsoft.AspNetCore.Http.Connections.HttpTransportType.WebSockets = 1 -> Microsoft.AspNetCore.Http.Connections.HttpTransportType
Microsoft.AspNetCore.Http.Connections.NegotiateProtocol
Microsoft.AspNetCore.Http.Connections.NegotiationResponse
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.AccessToken.get -> string?
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.AccessToken.set -> void
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.AvailableTransports.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Http.Connections.AvailableTransport!>?
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.AvailableTransports.set -> void
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.ConnectionId.get -> string?
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.ConnectionId.set -> void
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.ConnectionToken.get -> string?
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.ConnectionToken.set -> void
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.Error.get -> string?
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.Error.set -> void
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.NegotiationResponse() -> void
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.Url.get -> string?
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.Url.set -> void
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.UseStatefulReconnect.get -> bool
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.UseStatefulReconnect.set -> void
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.Version.get -> int
Microsoft.AspNetCore.Http.Connections.NegotiationResponse.Version.set -> void
static Microsoft.AspNetCore.Http.Connections.NegotiateProtocol.ParseResponse(System.ReadOnlySpan<byte> content) -> Microsoft.AspNetCore.Http.Connections.NegotiationResponse!
static Microsoft.AspNetCore.Http.Connections.NegotiateProtocol.WriteResponse(Microsoft.AspNetCore.Http.Connections.NegotiationResponse! response, System.Buffers.IBufferWriter<byte>! output) -> void
static readonly Microsoft.AspNetCore.Http.Connections.HttpTransports.All -> Microsoft.AspNetCore.Http.Connections.HttpTransportType
