<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <title>ASP.NET Core Logging Integration</title>
    <Description>This site extension enables logging integration for ASP.NET Core applications on Azure App Service.</Description>
    <TargetFramework>$(DefaultNetFxTargetFramework)</TargetFramework>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <PackageTags>aspnet;logging;aspnetcore;AzureSiteExtension;keyvault;configuration;dataprotection</PackageTags>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <PackageType>AzureSiteExtension</PackageType>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IncludeSymbols>false</IncludeSymbols>
    <ContentTargetFolders>content</ContentTargetFolders>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DisablePackageReferenceRestrictions>true</DisablePackageReferenceRestrictions>
    <NoSemVer20>true</NoSemVer20>
    <IsPackable>true</IsPackable>
    <IsShipping>true</IsShipping>
    <IsShipping Condition=" '$(PreReleaseVersionLabel)' == 'preview' ">false</IsShipping>
    <SiteExtensionsReferenceLayoutDir>$(ArtifactsObjDir)SiteExtensionsReferenceLayout/</SiteExtensionsReferenceLayoutDir>
    <MicrosoftWebXdtExtensionsPath>$(ArtifactsBinDir)Microsoft.Web.Xdt.Extensions\$(Configuration)\net462\Microsoft.Web.Xdt.Extensions.dll</MicrosoftWebXdtExtensionsPath>
    <MicrosoftWebXdtExtensionsPath Condition="'$(DotNetBuildPass)' == '2'">$(ArtifactsBinDir)Microsoft.Web.Xdt.Extensions\$(TargetArchitecture)\$(Configuration)\net462\Microsoft.Web.Xdt.Extensions.dll</MicrosoftWebXdtExtensionsPath>

    <!-- Grab packages LB.csproj should have just built. -->
    <RestoreAdditionalProjectSources>$(RestoreAdditionalProjectSources);$(ArtifactsNonShippingPackagesDir)</RestoreAdditionalProjectSources>
  </PropertyGroup>

  <ItemGroup>
    <!--
      Bundle in most down-level versions of the runtime-specific site extension packages. When updating
      $(DefaultNetCoreTargetFramework), add previous SiteExtension packages to the list below. Remove
      entries when packages aren't needed in the bundle anymore.
      -->
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.8.0.x64" PrivateAssets="All" />
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.8.0.x86" PrivateAssets="All" />
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.9.0.x64" PrivateAssets="All" />
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.9.0.x86" PrivateAssets="All" />
    <!--
      Bundle the just-built LB.csproj package content into this one the easy way. See
      UpdateLatestPackageReferences for the hard way.
    -->
    <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x64"
        Condition=" '$(IsShipping)' == 'false' AND '$(DotNetBuild)' != 'true'"
        PrivateAssets="All"
        Version="$(PackageVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x86"
        Condition=" '$(IsShipping)' == 'false' AND '$(DotNetBuild)' != 'true'"
        PrivateAssets="All"
        Version="$(PackageVersion)" />

    <_SiteExtensionsReference Include="$(ArtifactsNonShippingPackagesDir)Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x64.$(PackageVersion).nupkg"
        Name="Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x64"
        Condition=" '$(IsShipping)' == 'false' AND '$(DotNetBuild)' == 'true'" />
    <_SiteExtensionsReference Include="$(ArtifactsNonShippingPackagesDir)Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x86.$(PackageVersion).nupkg"
        Name="Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x86"
        Condition=" '$(IsShipping)' == 'false' AND '$(DotNetBuild)' == 'true'" />
  </ItemGroup>

  <Target Name="BuildSiteExtensionInputs"
      BeforeTargets="Restore"
      Condition=" '$(DotNetBuildPass)' == '2' ">

    <MSBuild Projects="..\..\..\Runtime\Microsoft.AspNetCore.Runtime.SiteExtension.pkgproj"
        BuildInParallel="false"
        Properties="Platform=x64"
        Targets="_VmrBuild" />
    <MSBuild Projects="..\..\..\Runtime\Microsoft.AspNetCore.Runtime.SiteExtension.pkgproj"
        BuildInParallel="false"
        Properties="Platform=x86;TargetRid=win-x86;BaseOS=win-x86;TargetRuntimeIdentifier=win-x86;TargetArchitecture=x86"
        Targets="_VmrBuild" />
    <MSBuild Projects="..\..\..\LoggingBranch\LB.csproj"
        BuildInParallel="false"
        Properties="Platform=x64;DisableTransitiveFrameworkReferences=true"
        Targets="_VmrBuild" />
    <MSBuild Projects="..\..\..\LoggingBranch\LB.csproj"
        BuildInParallel="false"
        Properties="Platform=x86;TargetRid=win-x86;BaseOS=win-x86;TargetRuntimeIdentifier=win-x86;TargetArchitecture=x86;DisableTransitiveFrameworkReferences=true"
        Targets="_VmrBuild" />
  </Target>

  <ItemGroup>
    <Content Include="applicationHost.xdt" />
    <Content Include="scmApplicationHost.xdt" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.Web.Xdt.Extensions"
      Private="false"
      ReferenceOutputAssembly="false"
      SkipGetTargetFrameworkProperties="true" />
  </ItemGroup>

  <!--
    Cannot assume this project and LB.csproj have the same package version because this creates a shipping
    package in non-preview builds and LB.csproj never creates a shipping package.
  -->
  <Target Name="UpdateLatestPackageReferences"
      BeforeTargets="CollectPackageReferences;ResolveAssemblyReferencesDesignTime;ResolveAssemblyReferences"
      Condition=" '$(IsShipping)' == 'true'">
    <!-- This target is defined in eng/targets/Packaging.targets and included in every C# and F# project. -->
    <MSBuild Projects="$(RepoRoot)src\SiteExtensions\LoggingBranch\LB.csproj"
        Targets="_GetPackageVersionInfo">
      <Output TaskParameter="TargetOutputs" ItemName="_ResolvedPackageVersionInfo" />
    </MSBuild>

    <ItemGroup Condition="'$(DotNetBuild)' != 'true'">
      <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x64"
          PrivateAssets="All"
          Version="%(_ResolvedPackageVersionInfo.PackageVersion)" />
      <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x86"
          PrivateAssets="All"
          Version="%(_ResolvedPackageVersionInfo.PackageVersion)" />
    </ItemGroup>

    <ItemGroup Condition="'$(DotNetBuild)' == 'true'">
      <_SiteExtensionsReference Include="$(ArtifactsNonShippingPackagesDir)Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x64.%(_ResolvedPackageVersionInfo.PackageVersion).nupkg" 
          Name="Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x64" />
      <_SiteExtensionsReference Include="$(ArtifactsNonShippingPackagesDir)Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x86.%(_ResolvedPackageVersionInfo.PackageVersion).nupkg"
          Name="Microsoft.AspNetCore.AzureAppServices.SiteExtension.$(AspNetCoreMajorMinorVersion).x86" />
    </ItemGroup>
  </Target>

  <Target Name="AddContent" BeforeTargets="_GetPackageFiles">
    <Unzip
        SourceFiles="@(_SiteExtensionsReference)"
        DestinationFolder="$(SiteExtensionsReferenceLayoutDir)%(Name)"
        OverwriteReadOnlyFiles="true"
        Condition="'$(DotNetBuild)' == 'true'" />

    <Error Condition="!Exists('$(MicrosoftWebXdtExtensionsPath)')" Text="Microsoft.Web.Xdt.Extensions.dll should be available for SiteExtensions .nupkg, but isn't." />

    <ItemGroup>
      <!--
        The x64 & x86 SiteExtension packages have identical deps.json files. We include only the x64 files to
        avoid build warnings.
      -->
      <ContentFilesToPack
          Include="$(NugetPackageRoot)\%(PackageReference.Identity)\%(PackageReference.Version)\content\**\*.*"
          Exclude="$(NugetPackageRoot)\Microsoft.AspNetCore.AzureAppServices.SiteExtension.*.x86\**\Microsoft.AspNetCore.AzureAppServices.HostingStartup.deps.json" />

      <ContentFilesToPack
          Include="$(SiteExtensionsReferenceLayoutDir)\%(_SiteExtensionsReference.Name)\content\**\*.*"
          Exclude="$(SiteExtensionsReferenceLayoutDir)\Microsoft.AspNetCore.AzureAppServices.SiteExtension.*.x86\**\Microsoft.AspNetCore.AzureAppServices.HostingStartup.deps.json"
          Condition="'$(DotNetBuild)' == 'true'" />

      <!-- Temporarily skip the common files -->
      <FilteredContentFilesToPack Include="@(ContentFilesToPack)" Condition="'%(RecursiveDir)' != ''" />
      <None Include="@(FilteredContentFilesToPack)" PackagePath="content\%(RecursiveDir)%(Filename)%(Extension)" Pack="true" />
      <Content Include="$(MicrosoftWebXdtExtensionsPath)" PackagePath="content" />
    </ItemGroup>
  </Target>
</Project>