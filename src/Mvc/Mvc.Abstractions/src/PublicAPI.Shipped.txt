#nullable enable
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext.BindingInfo.get -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext.CreateBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! metadata) -> Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext.Metadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext.MetadataProvider.get -> Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ActionContext.get -> Microsoft.AspNetCore.Mvc.ActionContext!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ActionContext.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.BinderModelName.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.BinderModelName.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.BindingSource.get -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.BindingSource.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.EnterNestedScope() -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.NestedScope
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.EnterNestedScope(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! modelMetadata, string! fieldName, string! modelName, object? model) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.NestedScope
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ExitNestedScope() -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.FieldName.get -> string!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.FieldName.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.IsTopLevelObject.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.IsTopLevelObject.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.Model.get -> object?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.Model.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelMetadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelMetadata.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelName.get -> string!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelName.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelState.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelState.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.PropertyFilter.get -> System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!, bool>?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.PropertyFilter.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.Result.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.Result.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ValidationState.get -> Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ValidationState.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ValueProvider.get -> Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ValueProvider.set -> void
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.AdditionalValues.get -> System.Collections.Generic.IReadOnlyDictionary<object!, object!>!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.BinderModelName.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.BinderType.get -> System.Type?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.BindingSource.get -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ConvertEmptyStringToNull.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DataTypeName.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Description.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DisplayFormatString.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DisplayName.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.EditFormatString.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ElementMetadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.EnumGroupedDisplayNamesAndValues.get -> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName, string!>>?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.EnumNamesAndValues.get -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HasNonDefaultEditFormat.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HideSurroundingHtml.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HtmlEncode.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingAllowed.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsEnum.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsFlagsEnum.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsReadOnly.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsRequired.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelBindingMessageProvider.get -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.NullDisplayText.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Order.get -> int
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Placeholder.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Properties.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelPropertyCollection!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.PropertyFilterProvider.get -> Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.PropertyGetter.get -> System.Func<object!, object?>?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.PropertySetter.get -> System.Action<object!, object?>?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ShowForDisplay.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ShowForEdit.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.SimpleDisplayProperty.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.TemplateHint.get -> string?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidateChildren.get -> bool
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidatorMetadata.get -> System.Collections.Generic.IReadOnlyList<object!>!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProvider.GetMetadataForParameter(System.Reflection.ParameterInfo! parameter) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProvider.GetMetadataForProperties(System.Type! modelType) -> System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!>!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProvider.GetMetadataForType(System.Type! modelType) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Children.get -> System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry!>?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.GetModelStateForProperty(string! propertyName) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry?
abstract Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.IsContainerNode.get -> bool
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.ActionConstraints.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata!>?
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.ActionConstraints.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.ActionDescriptor() -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.AttributeRouteInfo.get -> Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo?
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.AttributeRouteInfo.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.BoundProperties.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor!>!
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.BoundProperties.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.EndpointMetadata.get -> System.Collections.Generic.IList<object!>!
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.EndpointMetadata.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.FilterDescriptors.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor!>!
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.FilterDescriptors.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Id.get -> string!
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Parameters.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor!>!
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Parameters.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties.get -> System.Collections.Generic.IDictionary<object!, object?>!
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues.get -> System.Collections.Generic.IDictionary<string!, string?>!
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorProviderContext
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorProviderContext.ActionDescriptorProviderContext() -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorProviderContext.Results.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor!>!
Microsoft.AspNetCore.Mvc.Abstractions.ActionInvokerProviderContext
Microsoft.AspNetCore.Mvc.Abstractions.ActionInvokerProviderContext.ActionContext.get -> Microsoft.AspNetCore.Mvc.ActionContext!
Microsoft.AspNetCore.Mvc.Abstractions.ActionInvokerProviderContext.ActionInvokerProviderContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext) -> void
Microsoft.AspNetCore.Mvc.Abstractions.ActionInvokerProviderContext.Result.get -> Microsoft.AspNetCore.Mvc.Abstractions.IActionInvoker?
Microsoft.AspNetCore.Mvc.Abstractions.ActionInvokerProviderContext.Result.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.IActionDescriptorProvider
Microsoft.AspNetCore.Mvc.Abstractions.IActionDescriptorProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.Abstractions.IActionDescriptorProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.Abstractions.IActionDescriptorProvider.Order.get -> int
Microsoft.AspNetCore.Mvc.Abstractions.IActionInvoker
Microsoft.AspNetCore.Mvc.Abstractions.IActionInvoker.InvokeAsync() -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Mvc.Abstractions.IActionInvokerProvider
Microsoft.AspNetCore.Mvc.Abstractions.IActionInvokerProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.Abstractions.ActionInvokerProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.Abstractions.IActionInvokerProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.Abstractions.ActionInvokerProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.Abstractions.IActionInvokerProvider.Order.get -> int
Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor
Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor.BindingInfo.get -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo?
Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor.BindingInfo.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor.Name.get -> string!
Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor.Name.set -> void
Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor.ParameterDescriptor() -> void
Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor.ParameterType.get -> System.Type!
Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor.ParameterType.set -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext.ActionConstraintContext() -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext.Candidates.get -> System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate>!
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext.Candidates.set -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext.CurrentCandidate.get -> Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext.CurrentCandidate.set -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext.RouteContext.get -> Microsoft.AspNetCore.Routing.RouteContext!
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext.RouteContext.set -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintItem
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintItem.ActionConstraintItem(Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata! metadata) -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintItem.Constraint.get -> Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint?
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintItem.Constraint.set -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintItem.IsReusable.get -> bool
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintItem.IsReusable.set -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintItem.Metadata.get -> Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata!
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintProviderContext
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintProviderContext.Action.get -> Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor!
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintProviderContext.ActionConstraintProviderContext(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor! action, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintItem!>! items) -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintProviderContext.HttpContext.get -> Microsoft.AspNetCore.Http.HttpContext!
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintProviderContext.Results.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintItem!>!
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.Action.get -> Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor!
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.ActionSelectorCandidate() -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.ActionSelectorCandidate(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor! action, System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint!>? constraints) -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.ActionSelectorCandidate.Constraints.get -> System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint!>?
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint.Accept(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext! context) -> bool
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint.Order.get -> int
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintFactory
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintFactory.CreateInstance(System.IServiceProvider! services) -> Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint!
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintFactory.IsReusable.get -> bool
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintProvider
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintProvider.Order.get -> int
Microsoft.AspNetCore.Mvc.ActionContext
Microsoft.AspNetCore.Mvc.ActionContext.ActionContext() -> void
Microsoft.AspNetCore.Mvc.ActionContext.ActionContext(Microsoft.AspNetCore.Http.HttpContext! httpContext, Microsoft.AspNetCore.Routing.RouteData! routeData, Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor! actionDescriptor) -> void
Microsoft.AspNetCore.Mvc.ActionContext.ActionContext(Microsoft.AspNetCore.Http.HttpContext! httpContext, Microsoft.AspNetCore.Routing.RouteData! routeData, Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor! actionDescriptor, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! modelState) -> void
Microsoft.AspNetCore.Mvc.ActionContext.ActionContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext) -> void
Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor.get -> Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor!
Microsoft.AspNetCore.Mvc.ActionContext.ActionDescriptor.set -> void
Microsoft.AspNetCore.Mvc.ActionContext.HttpContext.get -> Microsoft.AspNetCore.Http.HttpContext!
Microsoft.AspNetCore.Mvc.ActionContext.HttpContext.set -> void
Microsoft.AspNetCore.Mvc.ActionContext.ModelState.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary!
Microsoft.AspNetCore.Mvc.ActionContext.RouteData.get -> Microsoft.AspNetCore.Routing.RouteData!
Microsoft.AspNetCore.Mvc.ActionContext.RouteData.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.ActionDescriptor.get -> Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.ActionDescriptor.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.ApiDescription() -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.GroupName.get -> string?
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.GroupName.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.HttpMethod.get -> string?
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.HttpMethod.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.ParameterDescriptions.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription!>!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.Properties.get -> System.Collections.Generic.IDictionary<object!, object!>!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.RelativePath.get -> string?
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.RelativePath.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.SupportedRequestFormats.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApiExplorer.ApiRequestFormat!>!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription.SupportedResponseTypes.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType!>!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.Actions.get -> System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor!>!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.ApiDescriptionProviderContext(System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor!>! actions) -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext.Results.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescription!>!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.ApiParameterDescription() -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.BindingInfo.get -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo?
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.BindingInfo.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.DefaultValue.get -> object?
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.DefaultValue.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.IsRequired.get -> bool
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.IsRequired.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.ModelMetadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.ModelMetadata.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.Name.get -> string!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.Name.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.ParameterDescriptor.get -> Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.ParameterDescriptor.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.RouteInfo.get -> Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterRouteInfo?
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.RouteInfo.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.Source.get -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.Source.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.Type.get -> System.Type!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterDescription.Type.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterRouteInfo
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterRouteInfo.ApiParameterRouteInfo() -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterRouteInfo.Constraints.get -> System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Routing.IRouteConstraint!>?
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterRouteInfo.Constraints.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterRouteInfo.DefaultValue.get -> object?
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterRouteInfo.DefaultValue.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterRouteInfo.IsOptional.get -> bool
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiParameterRouteInfo.IsOptional.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiRequestFormat
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiRequestFormat.ApiRequestFormat() -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiRequestFormat.Formatter.get -> Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiRequestFormat.Formatter.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiRequestFormat.MediaType.get -> string!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiRequestFormat.MediaType.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseFormat
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseFormat.ApiResponseFormat() -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseFormat.Formatter.get -> Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseFormat.Formatter.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseFormat.MediaType.get -> string!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseFormat.MediaType.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.ApiResponseFormats.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseFormat!>!
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.ApiResponseFormats.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.ApiResponseType() -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.IsDefaultResponse.get -> bool
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.IsDefaultResponse.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.ModelMetadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata?
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.ModelMetadata.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.StatusCode.get -> int
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.StatusCode.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.Type.get -> System.Type?
Microsoft.AspNetCore.Mvc.ApiExplorer.ApiResponseType.Type.set -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider
Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider.Order.get -> int
Microsoft.AspNetCore.Mvc.Authorization.IAllowAnonymousFilter
Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext
Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.ActionExecutedContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!>! filters, object! controller) -> void
Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext
Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext.ActionExecutingContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!>! filters, System.Collections.Generic.IDictionary<string!, object?>! actionArguments, object! controller) -> void
Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate
Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext
Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext.AuthorizationFilterContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!>! filters) -> void
Microsoft.AspNetCore.Mvc.Filters.ExceptionContext
Microsoft.AspNetCore.Mvc.Filters.ExceptionContext.ExceptionContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!>! filters) -> void
Microsoft.AspNetCore.Mvc.Filters.FilterContext
Microsoft.AspNetCore.Mvc.Filters.FilterContext.FilterContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!>! filters) -> void
Microsoft.AspNetCore.Mvc.Filters.FilterContext.FindEffectivePolicy<TMetadata>() -> TMetadata
Microsoft.AspNetCore.Mvc.Filters.FilterContext.IsEffectivePolicy<TMetadata>(TMetadata policy) -> bool
Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor
Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor.Filter.get -> Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!
Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor.FilterDescriptor(Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata! filter, int filterScope) -> void
Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor.Order.get -> int
Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor.Order.set -> void
Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor.Scope.get -> int
Microsoft.AspNetCore.Mvc.Filters.FilterItem
Microsoft.AspNetCore.Mvc.Filters.FilterItem.Descriptor.get -> Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor!
Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter.get -> Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata?
Microsoft.AspNetCore.Mvc.Filters.FilterItem.Filter.set -> void
Microsoft.AspNetCore.Mvc.Filters.FilterItem.FilterItem(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor! descriptor) -> void
Microsoft.AspNetCore.Mvc.Filters.FilterItem.FilterItem(Microsoft.AspNetCore.Mvc.Filters.FilterDescriptor! descriptor, Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata! filter) -> void
Microsoft.AspNetCore.Mvc.Filters.FilterItem.IsReusable.get -> bool
Microsoft.AspNetCore.Mvc.Filters.FilterItem.IsReusable.set -> void
Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext
Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.ActionContext.get -> Microsoft.AspNetCore.Mvc.ActionContext!
Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.ActionContext.set -> void
Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.FilterProviderContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.FilterItem!>! items) -> void
Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.Results.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.FilterItem!>!
Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.Results.set -> void
Microsoft.AspNetCore.Mvc.Filters.IActionFilter
Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext! context) -> void
Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext! context) -> void
Microsoft.AspNetCore.Mvc.Filters.IAlwaysRunResultFilter
Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter
Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext! context, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate! next) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Mvc.Filters.IAsyncAlwaysRunResultFilter
Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter
Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter
Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter.OnExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter
Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter.OnResourceExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext! context, Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate! next) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter
Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext! context, Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate! next) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter
Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext! context) -> void
Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter
Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext! context) -> void
Microsoft.AspNetCore.Mvc.Filters.IFilterContainer
Microsoft.AspNetCore.Mvc.Filters.IFilterContainer.FilterDefinition.get -> Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!
Microsoft.AspNetCore.Mvc.Filters.IFilterContainer.FilterDefinition.set -> void
Microsoft.AspNetCore.Mvc.Filters.IFilterFactory
Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.CreateInstance(System.IServiceProvider! serviceProvider) -> Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!
Microsoft.AspNetCore.Mvc.Filters.IFilterFactory.IsReusable.get -> bool
Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata
Microsoft.AspNetCore.Mvc.Filters.IFilterProvider
Microsoft.AspNetCore.Mvc.Filters.IFilterProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.Filters.IFilterProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.Filters.IFilterProvider.Order.get -> int
Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter
Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order.get -> int
Microsoft.AspNetCore.Mvc.Filters.IResourceFilter
Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext! context) -> void
Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext! context) -> void
Microsoft.AspNetCore.Mvc.Filters.IResultFilter
Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext! context) -> void
Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext! context) -> void
Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext
Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ResourceExecutedContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!>! filters) -> void
Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext
Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.ResourceExecutingContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!>! filters, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory!>! valueProviderFactories) -> void
Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.ValueProviderFactories.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory!>!
Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate
Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext
Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.ResultExecutedContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!>! filters, Microsoft.AspNetCore.Mvc.IActionResult! result, object! controller) -> void
Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext
Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext.ResultExecutingContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!>! filters, Microsoft.AspNetCore.Mvc.IActionResult! result, object! controller) -> void
Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate
Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection<TFormatter>
Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection<TFormatter>.FormatterCollection() -> void
Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection<TFormatter>.FormatterCollection(System.Collections.Generic.IList<TFormatter>! list) -> void
Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection<TFormatter>.RemoveType(System.Type! formatterType) -> void
Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection<TFormatter>.RemoveType<T>() -> void
Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter
Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.CanRead(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext! context) -> bool
Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext! context) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult!>!
Microsoft.AspNetCore.Mvc.Formatters.IInputFormatterExceptionPolicy
Microsoft.AspNetCore.Mvc.Formatters.IInputFormatterExceptionPolicy.ExceptionPolicy.get -> Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.HttpContext.get -> Microsoft.AspNetCore.Http.HttpContext!
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.InputFormatterContext(Microsoft.AspNetCore.Http.HttpContext! httpContext, string! modelName, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! modelState, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! metadata, System.Func<System.IO.Stream!, System.Text.Encoding!, System.IO.TextReader!>! readerFactory) -> void
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.InputFormatterContext(Microsoft.AspNetCore.Http.HttpContext! httpContext, string! modelName, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! modelState, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! metadata, System.Func<System.IO.Stream!, System.Text.Encoding!, System.IO.TextReader!>! readerFactory, bool treatEmptyInputAsDefaultValue) -> void
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.Metadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelName.get -> string!
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelState.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary!
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ModelType.get -> System.Type!
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.ReaderFactory.get -> System.Func<System.IO.Stream!, System.Text.Encoding!, System.IO.TextReader!>!
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext.TreatEmptyInputAsDefaultValue.get -> bool
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterException
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterException.InputFormatterException() -> void
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterException.InputFormatterException(string! message) -> void
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterException.InputFormatterException(string! message, System.Exception! innerException) -> void
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy.AllExceptions = 0 -> Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy.MalformedInputExceptions = 1 -> Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.HasError.get -> bool
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.IsModelSet.get -> bool
Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Model.get -> object?
Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter
Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext! context) -> bool
Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext
Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.OutputFormatterCanWriteContext(Microsoft.AspNetCore.Http.HttpContext! httpContext) -> void
Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext
Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext.OutputFormatterWriteContext(Microsoft.AspNetCore.Http.HttpContext! httpContext, System.Func<System.IO.Stream!, System.Text.Encoding!, System.IO.TextWriter!>! writerFactory, System.Type? objectType, object? object) -> void
Microsoft.AspNetCore.Mvc.IActionResult
Microsoft.AspNetCore.Mvc.IActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Mvc.IUrlHelper
Microsoft.AspNetCore.Mvc.IUrlHelper.Action(Microsoft.AspNetCore.Mvc.Routing.UrlActionContext! actionContext) -> string?
Microsoft.AspNetCore.Mvc.IUrlHelper.ActionContext.get -> Microsoft.AspNetCore.Mvc.ActionContext!
Microsoft.AspNetCore.Mvc.IUrlHelper.Content(string? contentPath) -> string?
Microsoft.AspNetCore.Mvc.IUrlHelper.IsLocalUrl(string? url) -> bool
Microsoft.AspNetCore.Mvc.IUrlHelper.Link(string? routeName, object? values) -> string?
Microsoft.AspNetCore.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext! routeContext) -> string?
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderModelName.get -> string?
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderModelName.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType.get -> System.Type?
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingInfo() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingInfo(Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo! other) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource.get -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource?
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.EmptyBodyBehavior.get -> Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.EmptyBodyBehavior.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.PropertyFilterProvider.get -> Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider?
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.PropertyFilterProvider.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.RequestPredicate.get -> System.Func<Microsoft.AspNetCore.Mvc.ActionContext!, bool>?
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.RequestPredicate.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.ServiceKey.get -> object?
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.ServiceKey.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.TryApplyBindingInfo(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! modelMetadata) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource
Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.BindingSource(string! id, string! displayName, bool isGreedy, bool isFromRequest) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.DisplayName.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource? other) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Id.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsFromRequest.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.CompositeBindingSource
Microsoft.AspNetCore.Mvc.ModelBinding.CompositeBindingSource.BindingSources.get -> System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!>!
Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior
Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior.Allow = 1 -> Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior
Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior.Default = 0 -> Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior
Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior.Disallow = 2 -> Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior
Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName
Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName.EnumGroupAndName() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName.EnumGroupAndName(string! group, string! name) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName.EnumGroupAndName(string! group, System.Func<string!>! name) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName.Group.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.EnumGroupAndName.Name.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.IBinderTypeProviderMetadata
Microsoft.AspNetCore.Mvc.ModelBinding.IBinderTypeProviderMetadata.BinderType.get -> System.Type?
Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceMetadata
Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceMetadata.BindingSource.get -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource?
Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder
Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext! bindingContext) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider
Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext! context) -> Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder?
Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider
Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider.GetMetadataForProperties(System.Type! modelType) -> System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!>!
Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider.GetMetadataForType(System.Type! modelType) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
Microsoft.AspNetCore.Mvc.ModelBinding.IModelNameProvider
Microsoft.AspNetCore.Mvc.ModelBinding.IModelNameProvider.Name.get -> string?
Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider
Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider.PropertyFilter.get -> System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!, bool>!
Microsoft.AspNetCore.Mvc.ModelBinding.IRequestPredicateProvider
Microsoft.AspNetCore.Mvc.ModelBinding.IRequestPredicateProvider.RequestPredicate.get -> System.Func<Microsoft.AspNetCore.Mvc.ActionContext!, bool>!
Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider
Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.ContainsPrefix(string! prefix) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider.GetValue(string! key) -> Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory
Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory.CreateValueProviderAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext! context) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.ModelBindingMessageProvider() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ConstructorInfo.get -> System.Reflection.ConstructorInfo?
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ContainerType.get -> System.Type?
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity other) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.MetadataKind.get -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ModelMetadataIdentity() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ModelType.get -> System.Type!
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Name.get -> string?
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ParameterInfo.get -> System.Reflection.ParameterInfo?
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.PropertyInfo.get -> System.Reflection.PropertyInfo?
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind.Constructor = 3 -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind.Parameter = 2 -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind.Property = 1 -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind.Type = 0 -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext.ModelBinderProviderContext() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelBindingContext() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.NestedScope
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.NestedScope.Dispose() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.NestedScope.NestedScope() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.NestedScope.NestedScope(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext! context) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.OriginalModelName.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.OriginalModelName.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult other) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.IsModelSet.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Model.get -> object?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.ModelBindingResult() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelError
Microsoft.AspNetCore.Mvc.ModelBinding.ModelError.ErrorMessage.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.ModelError.Exception.get -> System.Exception?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelError.ModelError(string? errorMessage) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelError.ModelError(System.Exception! exception) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelError.ModelError(System.Exception! exception, string? errorMessage) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelErrorCollection
Microsoft.AspNetCore.Mvc.ModelBinding.ModelErrorCollection.Add(string! errorMessage) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelErrorCollection.Add(System.Exception! exception) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelErrorCollection.ModelErrorCollection() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ContainerType.get -> System.Type?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ElementType.get -> System.Type?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata? other) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.GetDisplayName() -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Identity.get -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsCollectionType.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsComplexType.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsEnumerableType.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsNullableValueType.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsReferenceOrNullableType.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.MetadataKind.get -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataKind
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity identity) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelType.get -> System.Type!
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Name.get -> string?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ParameterName.get -> string?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.PropertyName.get -> string?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType.get -> System.Type!
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProvider
Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProvider.ModelMetadataProvider() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelPropertyCollection
Microsoft.AspNetCore.Mvc.ModelBinding.ModelPropertyCollection.ModelPropertyCollection(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!>! properties) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelPropertyCollection.this[string! propertyName].get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(string! key, string! errorMessage) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.AddModelError(string! key, System.Exception! exception, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! metadata) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Clear() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ClearValidationState(string! key) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ContainsKey(string! key) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Count.get -> int
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator.Current.get -> System.Collections.Generic.KeyValuePair<string!, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry!>
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator.Dispose() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator.Enumerator() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator.Enumerator(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! dictionary, string! prefix) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator.MoveNext() -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator.Reset() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ErrorCount.get -> int
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.FindKeysWithPrefix(string! prefix) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.PrefixEnumerable
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetEnumerator() -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetFieldValidationState(string! key) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.GetValidationState(string! key) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.HasReachedMaxErrors.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.IsValid.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerable
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerable.GetEnumerator() -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerator
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerable.KeyEnumerable() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerable.KeyEnumerable(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! dictionary) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerator
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerator.Current.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerator.Dispose() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerator.KeyEnumerator() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerator.KeyEnumerator(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! dictionary, string! prefix) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerator.MoveNext() -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerator.Reset() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Keys.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.KeyEnumerable
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MarkFieldSkipped(string! key) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MarkFieldValid(string! key) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors.get -> int
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.MaxAllowedErrors.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Merge(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! dictionary) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ModelStateDictionary() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ModelStateDictionary(int maxAllowedErrors) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ModelStateDictionary(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! dictionary) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.PrefixEnumerable
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.PrefixEnumerable.GetEnumerator() -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Enumerator
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.PrefixEnumerable.PrefixEnumerable() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.PrefixEnumerable.PrefixEnumerable(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! dictionary, string! prefix) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Remove(string! key) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Root.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry!
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.SetModelValue(string! key, Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult valueProviderResult) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.SetModelValue(string! key, object? rawValue, string? attemptedValue) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.this[string! key].get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(string! key, string! errorMessage) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelError(string! key, System.Exception! exception, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! metadata) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryAddModelException(string! key, System.Exception! exception) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.TryGetValue(string! key, out Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry? value) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValidationState.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerable
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerable.GetEnumerator() -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerator
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerable.ValueEnumerable() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerable.ValueEnumerable(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! dictionary) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerator
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerator.Current.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry!
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerator.Dispose() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerator.MoveNext() -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerator.Reset() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerator.ValueEnumerator() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerator.ValueEnumerator(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary! dictionary, string! prefix) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.Values.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.ValueEnumerable
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.AttemptedValue.get -> string?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.AttemptedValue.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelErrorCollection!
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.ModelStateEntry() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.RawValue.get -> object?
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.RawValue.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.ValidationState.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.ValidationState.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid = 1 -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Skipped = 3 -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Unvalidated = 0 -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Valid = 2 -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState
Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException
Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException.TooManyModelErrorsException(string! message) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext.Attributes.get -> System.Collections.Generic.IDictionary<string!, string!>!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext.ClientModelValidationContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! metadata, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider! metadataProvider, System.Collections.Generic.IDictionary<string!, string!>! attributes) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem.ClientValidatorItem() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem.ClientValidatorItem(object? validatorMetadata) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem.IsReusable.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem.IsReusable.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem.Validator.get -> Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator?
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem.Validator.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem.ValidatorMetadata.get -> object?
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorProviderContext
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorProviderContext.ClientValidatorProviderContext(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! modelMetadata, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem!>! items) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorProviderContext.ModelMetadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorProviderContext.Results.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorItem!>!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorProviderContext.ValidatorMetadata.get -> System.Collections.Generic.IReadOnlyList<object!>!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext! context) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidatorProvider
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidator
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidator.Validate(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContext! context) -> System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationResult!>!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext! context) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IPropertyValidationFilter
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IPropertyValidationFilter.ShouldValidateEntry(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry entry, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry parentEntry) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! metadata, string! key, object! model) -> System.Collections.Generic.IEnumerator<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry>!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContext
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContext.Container.get -> object?
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContext.Model.get -> object?
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContext.ModelValidationContext(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! modelMetadata, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider! metadataProvider, object? container, object? model) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase.ActionContext.get -> Microsoft.AspNetCore.Mvc.ActionContext!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase.MetadataProvider.get -> Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase.ModelMetadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase.ModelValidationContextBase(Microsoft.AspNetCore.Mvc.ActionContext! actionContext, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! modelMetadata, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider! metadataProvider) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationResult
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationResult.MemberName.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationResult.Message.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationResult.ModelValidationResult(string? memberName, string? message) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ModelMetadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ModelMetadata.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ModelValidatorProviderContext(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! modelMetadata, System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem!>! items) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.Results.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem!>!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext.ValidatorMetadata.get -> System.Collections.Generic.IReadOnlyList<object!>!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry.Key.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry.Metadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry.Model.get -> object?
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry.ValidationEntry() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry.ValidationEntry(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! metadata, string! key, object? model) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry.ValidationEntry(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! metadata, string! key, System.Func<object?>! modelAccessor) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.Add(object! key, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry! value) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.Add(System.Collections.Generic.KeyValuePair<object!, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry!> item) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.Clear() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.Contains(System.Collections.Generic.KeyValuePair<object!, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry!> item) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.ContainsKey(object! key) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair<object!, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry!>[]! array, int arrayIndex) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.Count.get -> int
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.GetEnumerator() -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<object!, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry!>>!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.IsReadOnly.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.Keys.get -> System.Collections.Generic.ICollection<object!>!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.Remove(object! key) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.Remove(System.Collections.Generic.KeyValuePair<object!, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry!> item) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.this[object! key].get -> Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry?
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.this[object! key].set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.TryGetValue(object! key, out Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry! value) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.ValidationStateDictionary() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary.Values.get -> System.Collections.Generic.ICollection<Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry!>!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry.Key.get -> string!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry.Key.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry.Metadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry.Metadata.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry.Strategy.get -> Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy!
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry.Strategy.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry.SuppressValidation.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry.SuppressValidation.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateEntry.ValidationStateEntry() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem.IsReusable.get -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem.IsReusable.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem.Validator.get -> Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidator?
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem.Validator.set -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem.ValidatorItem() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem.ValidatorItem(object! validatorMetadata) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorItem.ValidatorMetadata.get -> object!
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderException
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderException.ValueProviderException(string! message) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderException.ValueProviderException(string! message, System.Exception! innerException) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ActionContext.get -> Microsoft.AspNetCore.Mvc.ActionContext!
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ValueProviderFactoryContext(Microsoft.AspNetCore.Mvc.ActionContext! context) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext.ValueProviders.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider!>!
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Culture.get -> System.Globalization.CultureInfo!
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equals(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult other) -> bool
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.FirstValue.get -> string?
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.GetEnumerator() -> System.Collections.Generic.IEnumerator<string!>!
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Length.get -> int
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.ValueProviderResult() -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.ValueProviderResult(Microsoft.Extensions.Primitives.StringValues values) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.ValueProviderResult(Microsoft.Extensions.Primitives.StringValues values, System.Globalization.CultureInfo? culture) -> void
Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Values.get -> Microsoft.Extensions.Primitives.StringValues
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.AttributeRouteInfo() -> void
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.Name.get -> string?
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.Name.set -> void
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.Order.get -> int
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.Order.set -> void
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.SuppressLinkGeneration.get -> bool
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.SuppressLinkGeneration.set -> void
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.SuppressPathMatching.get -> bool
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.SuppressPathMatching.set -> void
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.Template.get -> string?
Microsoft.AspNetCore.Mvc.Routing.AttributeRouteInfo.Template.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Action.get -> string?
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Action.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Controller.get -> string?
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Controller.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Fragment.get -> string?
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Fragment.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Host.get -> string?
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Host.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Protocol.get -> string?
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Protocol.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.UrlActionContext() -> void
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Values.get -> object?
Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Values.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Fragment.get -> string?
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Fragment.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Host.get -> string?
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Host.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Protocol.get -> string?
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Protocol.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.RouteName.get -> string?
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.RouteName.set -> void
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.UrlRouteContext() -> void
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Values.get -> object?
Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext.Values.set -> void
override Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Equals(object? obj) -> bool
override Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.GetHashCode() -> int
override Microsoft.AspNetCore.Mvc.ModelBinding.CompositeBindingSource.CanAcceptDataFrom(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource! bindingSource) -> bool
override Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.Equals(object? obj) -> bool
override Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.GetHashCode() -> int
override Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Equals(object? obj) -> bool
override Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.GetHashCode() -> int
override Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.ToString() -> string!
override Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Equals(object? obj) -> bool
override Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.GetHashCode() -> int
override Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.Equals(object? obj) -> bool
override Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.GetHashCode() -> int
override Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.ToString() -> string!
static Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.GetProperty<T>(this Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor! actionDescriptor) -> T?
static Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions.SetProperty<T>(this Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor! actionDescriptor, T value) -> void
static Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Failure() -> Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult!
static Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.FailureAsync() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult!>!
static Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.NoValue() -> Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult!
static Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.NoValueAsync() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult!>!
static Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.Success(object? model) -> Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult!
static Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult.SuccessAsync(object? model) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult!>!
static Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo(System.Collections.Generic.IEnumerable<object!>! attributes) -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo?
static Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.GetBindingInfo(System.Collections.Generic.IEnumerable<object!>! attributes, Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! modelMetadata) -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo?
static Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.operator !=(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource? s1, Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource? s2) -> bool
static Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.operator ==(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource? s1, Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource? s2) -> bool
static Microsoft.AspNetCore.Mvc.ModelBinding.CompositeBindingSource.Create(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!>! bindingSources, string! displayName) -> Microsoft.AspNetCore.Mvc.ModelBinding.CompositeBindingSource!
static Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForConstructor(System.Reflection.ConstructorInfo! constructor, System.Type! modelType) -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
static Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForParameter(System.Reflection.ParameterInfo! parameter) -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
static Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForParameter(System.Reflection.ParameterInfo! parameter, System.Type! modelType) -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
static Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForProperty(System.Reflection.PropertyInfo! propertyInfo, System.Type! modelType, System.Type! containerType) -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
static Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForProperty(System.Type! modelType, string! name, System.Type! containerType) -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
static Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity.ForType(System.Type! modelType) -> Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity
static Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Failed() -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
static Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.operator !=(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult x, Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult y) -> bool
static Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.operator ==(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult x, Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult y) -> bool
static Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.Success(object? model) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult
static Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.StartsWithPrefix(string! prefix, string! key) -> bool
static Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.explicit operator string!(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult result) -> string!
static Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.explicit operator string![]!(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult result) -> string![]!
static Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.None -> Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult
static Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.operator !=(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult x, Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult y) -> bool
static Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult.operator ==(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult x, Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult y) -> bool
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Body -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Form -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.FormFile -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Header -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.ModelBinding -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Path -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Query -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Special -> Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource!
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DefaultOrder -> int
static readonly Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary.DefaultMaxAllowedErrors -> int
virtual Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.DisplayName.get -> string?
virtual Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.DisplayName.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.Canceled.get -> bool
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.Canceled.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.Controller.get -> object!
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.Exception.get -> System.Exception?
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.Exception.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.ExceptionDispatchInfo.get -> System.Runtime.ExceptionServices.ExceptionDispatchInfo?
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.ExceptionDispatchInfo.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.ExceptionHandled.get -> bool
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.ExceptionHandled.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.Result.get -> Microsoft.AspNetCore.Mvc.IActionResult?
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext.Result.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext.ActionArguments.get -> System.Collections.Generic.IDictionary<string!, object?>!
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext.Controller.get -> object!
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext.Result.get -> Microsoft.AspNetCore.Mvc.IActionResult?
virtual Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext.Result.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext.Result.get -> Microsoft.AspNetCore.Mvc.IActionResult?
virtual Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext.Result.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ExceptionContext.Exception.get -> System.Exception!
virtual Microsoft.AspNetCore.Mvc.Filters.ExceptionContext.Exception.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ExceptionContext.ExceptionDispatchInfo.get -> System.Runtime.ExceptionServices.ExceptionDispatchInfo?
virtual Microsoft.AspNetCore.Mvc.Filters.ExceptionContext.ExceptionDispatchInfo.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ExceptionContext.ExceptionHandled.get -> bool
virtual Microsoft.AspNetCore.Mvc.Filters.ExceptionContext.ExceptionHandled.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ExceptionContext.Result.get -> Microsoft.AspNetCore.Mvc.IActionResult?
virtual Microsoft.AspNetCore.Mvc.Filters.ExceptionContext.Result.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.FilterContext.Filters.get -> System.Collections.Generic.IList<Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata!>!
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Canceled.get -> bool
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Canceled.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception.get -> System.Exception?
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Exception.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo.get -> System.Runtime.ExceptionServices.ExceptionDispatchInfo?
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionDispatchInfo.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled.get -> bool
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.ExceptionHandled.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result.get -> Microsoft.AspNetCore.Mvc.IActionResult?
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext.Result.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result.get -> Microsoft.AspNetCore.Mvc.IActionResult?
virtual Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext.Result.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.Canceled.get -> bool
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.Canceled.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.Controller.get -> object!
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.Exception.get -> System.Exception?
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.Exception.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.ExceptionDispatchInfo.get -> System.Runtime.ExceptionServices.ExceptionDispatchInfo?
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.ExceptionDispatchInfo.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.ExceptionHandled.get -> bool
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.ExceptionHandled.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext.Result.get -> Microsoft.AspNetCore.Mvc.IActionResult!
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext.Cancel.get -> bool
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext.Cancel.set -> void
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext.Controller.get -> object!
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext.Result.get -> Microsoft.AspNetCore.Mvc.IActionResult!
virtual Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext.Result.set -> void
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.ContentType.get -> Microsoft.Extensions.Primitives.StringSegment
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.ContentType.set -> void
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.ContentTypeIsServerDefined.get -> bool
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.ContentTypeIsServerDefined.set -> void
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.HttpContext.get -> Microsoft.AspNetCore.Http.HttpContext!
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.HttpContext.set -> void
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.Object.get -> object?
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.Object.set -> void
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.ObjectType.get -> System.Type?
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.ObjectType.set -> void
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext.WriterFactory.get -> System.Func<System.IO.Stream!, System.Text.Encoding!, System.IO.TextWriter!>!
virtual Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext.WriterFactory.set -> void
virtual Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.CanAcceptDataFrom(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource! bindingSource) -> bool
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.AttemptedValueIsInvalidAccessor.get -> System.Func<string!, string!, string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.MissingBindRequiredValueAccessor.get -> System.Func<string!, string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.MissingKeyOrValueAccessor.get -> System.Func<string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.MissingRequestBodyRequiredValueAccessor.get -> System.Func<string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.NonPropertyAttemptedValueIsInvalidAccessor.get -> System.Func<string!, string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.NonPropertyUnknownValueIsInvalidAccessor.get -> System.Func<string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.NonPropertyValueMustBeANumberAccessor.get -> System.Func<string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.UnknownValueIsInvalidAccessor.get -> System.Func<string!, string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.ValueIsInvalidAccessor.get -> System.Func<string!, string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.ValueMustBeANumberAccessor.get -> System.Func<string!, string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.ValueMustNotBeNullAccessor.get -> System.Func<string!, string!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext.CreateBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata! metadata, Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo! bindingInfo) -> Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext.Services.get -> System.IServiceProvider!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.HttpContext.get -> Microsoft.AspNetCore.Http.HttpContext!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType.get -> System.Type!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.BoundConstructor.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata?
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.BoundConstructorInvoker.get -> System.Func<object?[]!, object!>?
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.BoundConstructorParameters.get -> System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!>?
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ContainerMetadata.get -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata?
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.GetMetadataForProperties(System.Type! modelType) -> System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!>!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.GetMetadataForType(System.Type! modelType) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HasValidators.get -> bool?
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.PropertyValidationFilter.get -> Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IPropertyValidationFilter?
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProvider.GetMetadataForConstructor(System.Reflection.ConstructorInfo! constructor, System.Type! modelType) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProvider.GetMetadataForParameter(System.Reflection.ParameterInfo! parameter, System.Type! modelType) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
virtual Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProvider.GetMetadataForProperty(System.Reflection.PropertyInfo! propertyInfo, System.Type! modelType) -> Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata!
