<!--
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the MIT license.
-->

<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs">

    <Fragment Id="Fragment.IIS.OOB.Common.IISCA">
        <!-- Immediate custom actions which will package and schedule deferred actions for module installation -->
        <CustomAction Id="IISScheduleInstallCA" DllEntry="IISScheduleInstallCA" Execute="immediate" Return="check" BinaryRef="IISCustomActionDll" />
        <CustomAction Id="IISScheduleUninstallCA" DllEntry="IISScheduleUninstallCA" Execute="immediate" Return="check" BinaryRef="IISCustomActionDll" />

        <!-- Deferred custom actions scheduled by the immediate actions above -->
        <CustomAction Id="IISExecuteCA" DllEntry="IISExecuteCA" Execute="deferred" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />
        <CustomAction Id="IISBeginTransactionCA" DllEntry="IISBeginTransactionCA" Execute="deferred" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />
        <CustomAction Id="IISRollbackTransactionCA" DllEntry="IISRollbackTransactionCA" Execute="rollback" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />
        <CustomAction Id="IISCommitTransactionCA" DllEntry="IISCommitTransactionCA" Execute="commit" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />

        <InstallExecuteSequence>
            <Custom Action="IISScheduleInstallCA" After="InstallFiles" Condition="NOT SKIPINSTALLCA AND NOT( REMOVE=&quot;ALL&quot; )" />
            <Custom Action="IISScheduleUninstallCA" Before="RemoveFiles" Condition="NOT SKIPUNINSTALLCA" />
        </InstallExecuteSequence>

        <!-- Define a table to hold Handler registration parameters -->
        <CustomTable Id="IISGlobalHandler">
            <Column Id="Name" Type="string" PrimaryKey="yes" />
            <Column Id="Component_" Type="string" KeyTable="Component" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
            <Column Id="Path" Type="string" Nullable="no" />
            <Column Id="Verb" Type="string" Nullable="no" />
            <Column Id="Type" Type="string" Nullable="yes" />
            <Column Id="Index" Type="string" Nullable="yes" />
            <!--  Index = one of { FIRST | LAST | BEFORE_STATICFILE } -->
            <Column Id="Modules" Type="string" Nullable="yes" />
            <Column Id="ScriptProcessor" Type="string" Nullable="yes" />
            <Column Id="ResourceType" Type="string" Nullable="yes" />
            <Column Id="RequiredAccess" Type="string" Nullable="yes" />
            <Column Id="PreCondition" Type="string" Nullable="yes" />
        </CustomTable>
        <!-- Define a table to hold Module registration parameters -->
        <CustomTable Id="IISGlobalModule">
            <Column Id="Name" Type="string" PrimaryKey="yes" />
            <Column Id="File_" Type="string" KeyTable="File" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
            <Column Id="PreCondition" Type="string" Nullable="yes" />
            <Column Id="TypeName" Type="string" Nullable="yes" />
        </CustomTable>
        <!-- Define a table to hold Trace Area and MOF registration parameters -->
        <CustomTable Id="IISTraceArea">
            <Column Id="ProviderName" Type="string" PrimaryKey="yes" />
            <Column Id="ProviderGuid" Type="string" Nullable="yes" />
            <Column Id="AreaName" Type="string" />
            <Column Id="AreaValue" Type="string" Nullable="yes" />
            <Column Id="BinaryName_" Type="string" KeyTable="Binary" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
            <Column Id="Component_" Type="string" KeyTable="Component" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
        </CustomTable>
        <!-- Define a table to hold Section Schema registration parameters -->
        <CustomTable Id="IISConfigSections">
            <Column Id="Name" Type="string" PrimaryKey="yes" />
            <Column Id="File_" Type="string" KeyTable="File" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
            <Column Id="OverrideModeDefault" Type="string" />
            <Column Id="AllowDefinition" Type="string" Nullable="yes" />
            <Column Id="Type" Type="string" Nullable="yes" />
            <Column Id="InAdminConfig" Type="string" Nullable="yes" Set="yes;no" />
        </CustomTable>
        <!-- Define a table to hold Section Defaults registration parameters -->
        <CustomTable Id="IISConfigSectionDefaults">
            <Column Id="Name" Type="string" PrimaryKey="yes" />
            <Column Id="SectionName" Type="string" Nullable="no" />
            <Column Id="Component_" Type="string" KeyTable="Component" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
            <Column Id="BinaryName_" Type="string" KeyTable="Binary" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
        </CustomTable>
        <!-- Define a table to hold Section additions registration parameters -->
        <CustomTable Id="IISConfigSectionAdditions">
            <Column Id="Name" Type="string" PrimaryKey="yes" />
            <Column Id="SectionName" Type="string" Nullable="no" />
            <Column Id="Component_" Type="string" KeyTable="Component" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
            <Column Id="BinaryName_" Type="string" KeyTable="Binary" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
        </CustomTable>
        <!-- Define a table to hold UI Module registration parameters -->
        <CustomTable Id="IISUIModule">
            <Column Id="Name" Type="string" PrimaryKey="yes" />
            <Column Id="Component_" Type="string" KeyTable="Component" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
            <Column Id="AssemblyInfoComponent_" Type="string" KeyTable="Component" KeyColumn="1" Category="identifier" Width="72" Modularize="column" Nullable="yes" />
            <Column Id="TypeName" Type="string" />
            <Column Id="RegisterInModulesSection" Type="string" Nullable="yes" />
            <Column Id="PrependToList" Type="string" Nullable="yes" />
        </CustomTable>
        <!-- Define a table to hold CGI Restriction registration parameters -->
        <CustomTable Id="IISCgiRestriction">
            <Column Id="Name" Type="string" PrimaryKey="yes" />
            <Column Id="Component_" Type="string" KeyTable="Component" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
            <Column Id="Path" Type="string" Nullable="no" />
            <Column Id="Allowed" Type="string" Nullable="no" />
            <Column Id="GroupId" Type="string" Nullable="no" />
            <Column Id="Description" Type="string" Nullable="no" />
        </CustomTable>

    </Fragment>

    <Fragment Id="Fragment.IIS.OOB.Common.WindowsHotfix">

    <CustomAction Id="ScheduleInstallWindowsHotfix" DllEntry="ScheduleInstallWindowsHotfixCA" Execute="immediate" Return="check" BinaryRef="IISCustomActionDll" />
    <!-- Deferred custom actions scheduled by the immediate actions above -->
    <CustomAction Id="ExecuteInstallWindowsHotfix" DllEntry="ExecuteInstallWindowsHotfixCA" Execute="deferred" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />
    <CustomAction Id="RollbackCleanUpWindowsHotfix" DllEntry="ExecuteCleanUpWindowsHotfixCA" Execute="rollback" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />
    <CustomAction Id="CommitCleanUpWindowsHotfix" DllEntry="ExecuteCleanUpWindowsHotfixCA" Execute="commit" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />

    <CustomAction Id="ScheduleRebootIfRequired" DllEntry="ScheduleRebootIfRequiredCA" Execute="immediate" Return="check" BinaryRef="IISCustomActionDll" />

    <CustomTable Id="IISWindowsHotfix">
      <Column Id="Name" Type="string" PrimaryKey="yes" />
      <Column Id="BinaryName_" Type="string" KeyTable="Binary" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
      <Column Id="OSMajorVersion" Type="int" Width="4" Nullable="yes" />
      <Column Id="OSMinorVersion" Type="int" Width="4" Nullable="yes" />
      <Column Id="SPMajorVersion" Type="int" Width="2" Nullable="yes" />
      <Column Id="Condition" Type="string" Category="condition" Nullable="yes" />
    </CustomTable>

    <InstallExecuteSequence>
      <Custom Action="ScheduleInstallWindowsHotfix" Before="RemoveFiles" Condition="NOT SKIPINSTALLWINDOWSHOTFIX" />
      <Custom Action="ScheduleRebootIfRequired" After="InstallFinalize" Condition="NOT SKIPREBOOTIFREQUIRED" />
    </InstallExecuteSequence>

  </Fragment>

  <Fragment Id="Fragment.IIS.OOB.Common.ElevatedShortcut">
    <CustomAction Id="ScheduleMakeShortcutElevated" DllEntry="ScheduleMakeShortcutElevatedCA" Execute="immediate" Return="check" BinaryRef="IISCustomActionDll" />

    <!-- Deferred custom actions scheduled by the immediate actions above -->
    <CustomAction Id="ExecuteMakeShortcutElevated" DllEntry="ExecuteMakeShortcutElevatedCA" Execute="deferred" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />

    <CustomTable Id="IISElevatedShortcut">
      <!--<Column Id='Name' Type='string' PrimaryKey='yes' />-->
      <Column Id="Shortcut_" Type="string" PrimaryKey="yes" KeyTable="Shortcut" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
    </CustomTable>

    <InstallExecuteSequence>
      <Custom Action="ScheduleMakeShortcutElevated" After="CreateShortcuts" Condition="NOT SKIPMAKESHORTCUTELEVATED" />
    </InstallExecuteSequence>
  </Fragment>

  <Fragment Id="Fragment.IIS.OOB.Common.ShortcutConsoleProperties">
    <CustomAction Id="ScheduleSetConsoleProperties" DllEntry="ScheduleSetConsolePropertiesCA" Execute="immediate" Return="check" BinaryRef="IISCustomActionDll" />

    <!-- Deferred custom actions scheduled by the immediate actions above -->
    <CustomAction Id="ExecuteSetConsoleProperties" DllEntry="ExecuteSetConsolePropertiesCA" Execute="deferred" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />

    <CustomTable Id="IISShortcutConsoleProperties">
      <!--<Column Id='Name' Type='string' PrimaryKey='yes' />-->
      <Column Id="Shortcut_" Type="string" PrimaryKey="yes" KeyTable="Shortcut" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
      <Column Id="QuickEdit" Type="int" Width="2" MinValue="0" MaxValue="1" Nullable="no" />
      <Column Id="InsertMode" Type="int" Width="2" MinValue="0" MaxValue="1" Nullable="no" />
      <Column Id="WindowWidth" Type="int" Width="2" Nullable="no" />
      <Column Id="WindowHeight" Type="int" Width="2" Nullable="no" />
      <Column Id="BufferWidth" Type="int" Width="2" Nullable="no" />
      <Column Id="BufferHeight" Type="int" Width="2" Nullable="no" />
      <!--<Column Id="TextColor" Type="string"  Width="11" Nullable="yes"/>
      <Column Id="BackgroundColor" Type="string" Width="11" Nullable="yes" Category="Formatted"/>-->
    </CustomTable>

    <InstallExecuteSequence>
      <Custom Action="ScheduleSetConsoleProperties" After="CreateShortcuts" Condition="NOT SKIPSETCONSOLEPROPERTIES" />
    </InstallExecuteSequence>
  </Fragment>

  <Fragment Id="Fragment.IIS.OOB.Common.HttpListener">
    <!-- Immediate custom actions which will package and schedule deferred actions for httpsys -->
    <CustomAction Id="ScheduleInstallHttpListener" DllEntry="ScheduleInstallHttpListenerCA" Execute="immediate" Return="check" BinaryRef="IISCustomActionDll" />
    <CustomAction Id="ScheduleUnInstallHttpListener" DllEntry="ScheduleUnInstallHttpListenerCA" Execute="immediate" Return="check" BinaryRef="IISCustomActionDll" />

    <!-- Deferred custom actions scheduled by the immediate actions above -->
    <CustomAction Id="ExecuteInstallHttpListener" DllEntry="ExecuteInstallHttpListenerCA" Execute="deferred" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />
    <CustomAction Id="ExecuteUnInstallHttpListener" DllEntry="ExecuteUnInstallHttpListenerCA" Execute="deferred" Return="check" Impersonate="no" BinaryRef="IISCustomActionDll" />

    <!-- Setup Custom Action Parameters -->

    <!-- Define a table to hold registration parameters -->
    <CustomTable Id="IISHttpListener">
      <Column Id="Name" Type="string" PrimaryKey="yes" />
      <Column Id="Component_" Type="string" KeyTable="Component" KeyColumn="1" Category="identifier" Modularize="column" Width="72" />
      <Column Id="Account" Type="string" />
      <Column Id="Prefix" Type="string" />
    </CustomTable>

    <InstallExecuteSequence>
      <Custom Action="ScheduleInstallHttpListener" After="InstallFiles" Condition="NOT SKIPINSTALLHTTPLISTENER" />
      <Custom Action="ScheduleUnInstallHttpListener" Before="RemoveFiles" Condition="NOT SKIPUNINSTALLHTTPLISTENER" />
    </InstallExecuteSequence>
  </Fragment>

  <!-- 
        fragment makes the patching experience show the welcome screen followed by the  ready dialog 
        this prevents the user from seeing the repair/remove/change screen when they double-click the patch.
        we decided that it is confusing to see a remove button when the intention was to patch the product.
    -->
  <Fragment Id="Fragment.IIS.OOB.Common.FixPatchingBehavior">
    <CustomAction Id="CustomAction_ChangeInstallMode" Property="WixUI_InstallMode" Value="Repair" />
    <CustomAction Id="CustomAction_ChangeNextOnPatch" Property="WixUI_MaintenanceWelcomeDlg_Next" Value="VerifyReadyDlg" />
    <CustomAction Id="CustomAction_ChangeBackOnPatch" Property="WixUI_VerifyReadyDlg_BackRepair" Value="MaintenanceWelcomeDlg" />

    <InstallUISequence>
      <Custom Action="CustomAction_ChangeInstallMode" Before="MaintenanceWelcomeDlg" Condition="Installed And PATCH" />
      <Custom Action="CustomAction_ChangeNextOnPatch" Before="MaintenanceWelcomeDlg" Condition="Installed And PATCH" />
      <Custom Action="CustomAction_ChangeBackOnPatch" Before="MaintenanceWelcomeDlg" Condition="Installed And PATCH" />
    </InstallUISequence>
  </Fragment>

</Wix>
