#nullable enable
~Microsoft.AspNetCore.Cors.CorsPolicyMetadata.CorsPolicyMetadata(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy) -> void
~Microsoft.AspNetCore.Cors.CorsPolicyMetadata.Policy.get -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
~Microsoft.AspNetCore.Cors.EnableCorsAttribute.EnableCorsAttribute(string policyName) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.CorsMiddleware(Microsoft.AspNetCore.Http.RequestDelegate next, Microsoft.AspNetCore.Cors.Infrastructure.ICorsService corsService, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.CorsMiddleware(Microsoft.AspNetCore.Http.RequestDelegate next, Microsoft.AspNetCore.Cors.Infrastructure.ICorsService corsService, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.CorsMiddleware(Microsoft.AspNetCore.Http.RequestDelegate next, Microsoft.AspNetCore.Cors.Infrastructure.ICorsService corsService, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, string policyName) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider corsPolicyProvider) -> System.Threading.Tasks.Task
~Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddDefaultPolicy(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddDefaultPolicy(System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder> configurePolicy) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddPolicy(string name, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddPolicy(string name, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder> configurePolicy) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.GetPolicy(string name) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.ExposedHeaders.get -> System.Collections.Generic.IList<string>
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.Headers.get -> System.Collections.Generic.IList<string>
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyHeader() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyMethod() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyOrigin() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowCredentials() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.Build() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.CorsPolicyBuilder(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.CorsPolicyBuilder(params string[] origins) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.DisallowCredentials() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.SetIsOriginAllowed(System.Func<string, bool> isOriginAllowed) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.SetIsOriginAllowedToAllowWildcardSubdomains() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.SetPreflightMaxAge(System.TimeSpan preflightMaxAge) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithExposedHeaders(params string[] exposedHeaders) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithHeaders(params string[] headers) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithMethods(params string[] methods) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithOrigins(params string[] origins) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
~Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedExposedHeaders.get -> System.Collections.Generic.IList<string>
~Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedHeaders.get -> System.Collections.Generic.IList<string>
~Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedMethods.get -> System.Collections.Generic.IList<string>
~Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
~Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext context, string policyName) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
~Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.GetPolicyAsync(Microsoft.AspNetCore.Http.HttpContext context, string policyName) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy>
~Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyMetadata.Policy.get -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
~Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(Microsoft.AspNetCore.Http.HttpContext context, string policyName) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy>
~Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result, Microsoft.AspNetCore.Http.HttpResponse response) -> void
~Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
~override Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.ToString() -> string
~override Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.ToString() -> string
~static Microsoft.AspNetCore.Builder.CorsEndpointConventionBuilderExtensions.RequireCors<TBuilder>(this TBuilder builder, string policyName) -> TBuilder
~static Microsoft.AspNetCore.Builder.CorsEndpointConventionBuilderExtensions.RequireCors<TBuilder>(this TBuilder builder, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder> configurePolicy) -> TBuilder
~static Microsoft.AspNetCore.Builder.CorsMiddlewareExtensions.UseCors(this Microsoft.AspNetCore.Builder.IApplicationBuilder app) -> Microsoft.AspNetCore.Builder.IApplicationBuilder
~static Microsoft.AspNetCore.Builder.CorsMiddlewareExtensions.UseCors(this Microsoft.AspNetCore.Builder.IApplicationBuilder app, string policyName) -> Microsoft.AspNetCore.Builder.IApplicationBuilder
~static Microsoft.AspNetCore.Builder.CorsMiddlewareExtensions.UseCors(this Microsoft.AspNetCore.Builder.IApplicationBuilder app, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder> configurePolicy) -> Microsoft.AspNetCore.Builder.IApplicationBuilder
~static Microsoft.Extensions.DependencyInjection.CorsServiceCollectionExtensions.AddCors(this Microsoft.Extensions.DependencyInjection.IServiceCollection services) -> Microsoft.Extensions.DependencyInjection.IServiceCollection
~static Microsoft.Extensions.DependencyInjection.CorsServiceCollectionExtensions.AddCors(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions> setupAction) -> Microsoft.Extensions.DependencyInjection.IServiceCollection
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlAllowCredentials -> string
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlAllowHeaders -> string
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlAllowMethods -> string
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlAllowOrigin -> string
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlExposeHeaders -> string
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlMaxAge -> string
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlRequestHeaders -> string
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlRequestMethod -> string
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AnyOrigin -> string
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.Origin -> string
~static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.PreflightHttpMethod -> string
~virtual Microsoft.AspNetCore.Cors.Infrastructure.CorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result, Microsoft.AspNetCore.Http.HttpResponse response) -> void
~virtual Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePreflightRequest(Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy, Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result) -> void
~virtual Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluateRequest(Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy policy, Microsoft.AspNetCore.Cors.Infrastructure.CorsResult result) -> void
Microsoft.AspNetCore.Builder.CorsEndpointConventionBuilderExtensions
Microsoft.AspNetCore.Builder.CorsMiddlewareExtensions
Microsoft.AspNetCore.Cors.CorsPolicyMetadata
Microsoft.AspNetCore.Cors.CorsPolicyMetadata.CorsPolicyMetadata(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy! policy) -> void
Microsoft.AspNetCore.Cors.CorsPolicyMetadata.Policy.get -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy!
Microsoft.AspNetCore.Cors.DisableCorsAttribute
Microsoft.AspNetCore.Cors.DisableCorsAttribute.DisableCorsAttribute() -> void
Microsoft.AspNetCore.Cors.EnableCorsAttribute
Microsoft.AspNetCore.Cors.EnableCorsAttribute.EnableCorsAttribute() -> void
Microsoft.AspNetCore.Cors.EnableCorsAttribute.EnableCorsAttribute(string? policyName) -> void
Microsoft.AspNetCore.Cors.EnableCorsAttribute.PolicyName.get -> string?
Microsoft.AspNetCore.Cors.EnableCorsAttribute.PolicyName.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants
Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware
Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.CorsMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, Microsoft.AspNetCore.Cors.Infrastructure.ICorsService! corsService, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy! policy, Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory) -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.CorsMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, Microsoft.AspNetCore.Cors.Infrastructure.ICorsService! corsService, Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory) -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.CorsMiddleware(Microsoft.AspNetCore.Http.RequestDelegate! next, Microsoft.AspNetCore.Cors.Infrastructure.ICorsService! corsService, Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory, string? policyName) -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider! corsPolicyProvider) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddDefaultPolicy(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy! policy) -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddDefaultPolicy(System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!>! configurePolicy) -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddPolicy(string! name, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy! policy) -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.AddPolicy(string! name, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!>! configurePolicy) -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.CorsOptions() -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.DefaultPolicyName.get -> string!
Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.DefaultPolicyName.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions.GetPolicy(string! name) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy?
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.AllowAnyHeader.get -> bool
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.AllowAnyMethod.get -> bool
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.AllowAnyOrigin.get -> bool
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.CorsPolicy() -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.ExposedHeaders.get -> System.Collections.Generic.IList<string!>!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.Headers.get -> System.Collections.Generic.IList<string!>!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.IsOriginAllowed.get -> System.Func<string!, bool>!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.IsOriginAllowed.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.Methods.get -> System.Collections.Generic.IList<string!>!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.Origins.get -> System.Collections.Generic.IList<string!>!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.PreflightMaxAge.get -> System.TimeSpan?
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.PreflightMaxAge.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.SupportsCredentials.get -> bool
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.SupportsCredentials.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyHeader() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyMethod() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyOrigin() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowCredentials() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.Build() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.CorsPolicyBuilder(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy! policy) -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.CorsPolicyBuilder(params string![]! origins) -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.DisallowCredentials() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.SetIsOriginAllowed(System.Func<string!, bool>! isOriginAllowed) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.SetIsOriginAllowedToAllowWildcardSubdomains() -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.SetPreflightMaxAge(System.TimeSpan preflightMaxAge) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithExposedHeaders(params string![]! exposedHeaders) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithHeaders(params string![]! headers) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithMethods(params string![]! methods) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithOrigins(params string![]! origins) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedExposedHeaders.get -> System.Collections.Generic.IList<string!>!
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedHeaders.get -> System.Collections.Generic.IList<string!>!
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedMethods.get -> System.Collections.Generic.IList<string!>!
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedOrigin.get -> string?
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedOrigin.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.CorsResult() -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.IsOriginAllowed.get -> bool
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.IsOriginAllowed.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.IsPreflightRequest.get -> bool
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.IsPreflightRequest.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.PreflightMaxAge.get -> System.TimeSpan?
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.PreflightMaxAge.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.SupportsCredentials.get -> bool
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.SupportsCredentials.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.VaryByOrigin.get -> bool
Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.VaryByOrigin.set -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsService
Microsoft.AspNetCore.Cors.Infrastructure.CorsService.CorsService(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions!>! options, Microsoft.Extensions.Logging.ILoggerFactory! loggerFactory) -> void
Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy! policy) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsResult!
Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext! context, string! policyName) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsResult!
Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider
Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.DefaultCorsPolicyProvider(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions!>! options) -> void
Microsoft.AspNetCore.Cors.Infrastructure.DefaultCorsPolicyProvider.GetPolicyAsync(Microsoft.AspNetCore.Http.HttpContext! context, string? policyName) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy?>!
Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyMetadata
Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyMetadata.Policy.get -> Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy!
Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider
Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(Microsoft.AspNetCore.Http.HttpContext! context, string? policyName) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy?>!
Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult! result, Microsoft.AspNetCore.Http.HttpResponse! response) -> void
Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy! policy) -> Microsoft.AspNetCore.Cors.Infrastructure.CorsResult!
Microsoft.AspNetCore.Cors.Infrastructure.IDisableCorsAttribute
Microsoft.AspNetCore.Cors.Infrastructure.IEnableCorsAttribute
Microsoft.AspNetCore.Cors.Infrastructure.IEnableCorsAttribute.PolicyName.get -> string?
Microsoft.AspNetCore.Cors.Infrastructure.IEnableCorsAttribute.PolicyName.set -> void
Microsoft.Extensions.DependencyInjection.CorsServiceCollectionExtensions
override Microsoft.AspNetCore.Cors.DisableCorsAttribute.ToString() -> string!
override Microsoft.AspNetCore.Cors.EnableCorsAttribute.ToString() -> string!
override Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy.ToString() -> string!
override Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.ToString() -> string!
static Microsoft.AspNetCore.Builder.CorsEndpointConventionBuilderExtensions.RequireCors<TBuilder>(this TBuilder builder) -> TBuilder
static Microsoft.AspNetCore.Builder.CorsEndpointConventionBuilderExtensions.RequireCors<TBuilder>(this TBuilder builder, string! policyName) -> TBuilder
static Microsoft.AspNetCore.Builder.CorsEndpointConventionBuilderExtensions.RequireCors<TBuilder>(this TBuilder builder, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!>! configurePolicy) -> TBuilder
static Microsoft.AspNetCore.Builder.CorsMiddlewareExtensions.UseCors(this Microsoft.AspNetCore.Builder.IApplicationBuilder! app) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.Builder.CorsMiddlewareExtensions.UseCors(this Microsoft.AspNetCore.Builder.IApplicationBuilder! app, string! policyName) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.AspNetCore.Builder.CorsMiddlewareExtensions.UseCors(this Microsoft.AspNetCore.Builder.IApplicationBuilder! app, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder!>! configurePolicy) -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
static Microsoft.Extensions.DependencyInjection.CorsServiceCollectionExtensions.AddCors(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Microsoft.Extensions.DependencyInjection.CorsServiceCollectionExtensions.AddCors(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions!>! setupAction) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlAllowCredentials -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlAllowHeaders -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlAllowMethods -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlAllowOrigin -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlExposeHeaders -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlMaxAge -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlRequestHeaders -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AccessControlRequestMethod -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AnyHeader -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AnyMethod -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.AnyOrigin -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.Origin -> string!
static readonly Microsoft.AspNetCore.Cors.Infrastructure.CorsConstants.PreflightHttpMethod -> string!
virtual Microsoft.AspNetCore.Cors.Infrastructure.CorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult! result, Microsoft.AspNetCore.Http.HttpResponse! response) -> void
virtual Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePreflightRequest(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy! policy, Microsoft.AspNetCore.Cors.Infrastructure.CorsResult! result) -> void
virtual Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluateRequest(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy! policy, Microsoft.AspNetCore.Cors.Infrastructure.CorsResult! result) -> void
