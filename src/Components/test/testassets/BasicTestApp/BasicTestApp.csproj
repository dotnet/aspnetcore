<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>

    <!-- Must be defined before ReferenceFromSource.props is imported -->
    <AdditionalRunArguments>--pathbase /subdir</AdditionalRunArguments>

    <!-- Resx generation on Resources.resx only -->
    <GenerateResxSource>false</GenerateResxSource>

    <!-- Project supports more than one language -->
    <BlazorWebAssemblyLoadAllGlobalizationData>true</BlazorWebAssemblyLoadAllGlobalizationData>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TestTrimmedOrMultithreadingApps)' == 'true'">
    <!-- Avoid spending time brotli compression publish output.-->
    <_BlazorBrotliCompressionLevel>NoCompression</_BlazorBrotliCompressionLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System.ComponentModel" />
    <Reference Include="System.Net.Http.Json" />
    <Reference Include="Microsoft.AspNetCore.Components.WebAssembly" />
    <Reference Include="Microsoft.AspNetCore.Components.CustomElements" />
    <Reference Include="Microsoft.AspNetCore.Components.Authorization" />
    <Reference Include="Microsoft.AspNetCore.Components.QuickGrid" />
    <Reference Include="Microsoft.AspNetCore.SignalR.Client" />
    <Reference Include="Microsoft.Extensions.Logging.Configuration" />
    <Reference Include="Newtonsoft.Json" />
    <Reference Include="System.Private.Uri" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\TestContentPackage\TestContentPackage.csproj" />
    <ProjectReference Include="..\LazyTestContentPackage\LazyTestContentPackage.csproj" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources.resx" GenerateSource="true" />
  </ItemGroup>

  <ItemGroup>
    <BlazorWebAssemblyLazyLoad Include="Newtonsoft.Json.wasm" />
    <BlazorWebAssemblyLazyLoad Include="LazyTestContentPackage.wasm" />
  </ItemGroup>

  <!-- Workaround for https://github.com/dotnet/aspnetcore/issues/30791 -->
  <Target Name="_FixupPublishBug" AfterTargets="_ProcessPublishFilesForBlazor" BeforeTargets="_BlazorCompressPublishFiles" Condition="'$(TestTrimmedOrMultithreadingApps)' == 'true'">
    <ItemGroup>
      <ResolvedFileToPublish RelativePath="$([System.String]::Copy('%(ResolvedFileToPublish.RelativePath)').Replace('subdir\subdir', 'subdir').Replace('subdir/subdir', 'subdir'))" />

      <ResolvedFileToPublish
        Include="@(ResolvedFileToPublish)"
        RelativePath="$([System.String]::Copy('%(ResolvedFileToPublish.RelativePath)').Replace('subdir\_content', '_content').Replace('subdir/subdir', '_content'))"
        Condition="$([System.String]::Copy('%(ResolvedFileToPublish.RelativePath)').Replace('subdir\_content', 'subdir/_content').Contains('subdir/_content'))" />
    </ItemGroup>
  </Target>

</Project>

