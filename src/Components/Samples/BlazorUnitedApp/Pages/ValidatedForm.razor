@page "/validated-form"
@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@using BlazorUnitedApp.Validation

<PageTitle>Validated Form</PageTitle>

<h1>Validated Form</h1>

<EditForm Model="@Model" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
    <div class="alert @StatusClass">@StatusMessage</div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Author.Name: </label>
        <InputText Id="name" Class="form-control" @bind-Value="@Model.Author.Name"></InputText>
        <ValidationMessage For="@(() => Model.Author.Name)" />
    </div>
    <div class="form-group">
        <label for="name">Author.Email: </label>
        <InputText Id="name" Class="form-control" @bind-Value="@Model.Author.Email"></InputText>
        <ValidationMessage For="@(() => Model.Author.Email)" />
    </div>
    <div class="form-group">
        <label for="age">Author.Age: </label>
        <InputNumber Id="age" Class="form-control" @bind-Value="@Model.Author.Age"></InputNumber>
        <ValidationMessage For="@(() => Model.Author.Age)" />
    </div>
    <div class="form-group">
        <label for="city">Author.Address.City: </label>
        <InputText Id="city" Class="form-control" @bind-Value="@Model.Author.Address.City"></InputText>
        <ValidationMessage For="@(() => Model.Author.Address.City)" />
    </div>
    <div class="form-group">
        <label for="street">Author.Address.Street: </label>
        <InputText Id="street" Class="form-control" @bind-Value="@Model.Author.Address.Street"></InputText>
        <ValidationMessage For="@(() => Model.Author.Address.Street)" />
    </div>
    <div class="form-group">
        <label for="body">Title: </label>
        <InputTextArea Id="body" Class="form-control" @bind-Value="@Model.Title"></InputTextArea>
        <ValidationMessage For="@(() => Model.Title)" />
    </div>


    @for (int i = 0; i < Model.Messages.Count; i++)
    {
        var itemIndex = i;
        <div class="item-row" style="margin-bottom: 15px; padding: 10px; border: 1px solid #ccc;">
            <h5>Item @(itemIndex + 1)</h5>
            <div class="form-group">
                <label for="@($"itemName{itemIndex}")">Name:</label>
                <InputText id="@($"itemName{itemIndex}")" @bind-Value="Model.Messages[itemIndex].Text" class="form-control" />
                <ValidationMessage For="@(() => Model.Messages[itemIndex].Text)" />
            </div>
            <button type="button" class="btn btn-danger btn-sm" @onclick="() => RemoveItem(itemIndex)">Remove Item</button>
        </div>
    }

    <button type="button" class="btn btn-primary" @onclick="AddMessage">Add Item</button>

    <button type="submit">Ok</button>

</EditForm>

@code
{
    private string? StatusMessage;
    private string? StatusClass;

    private List<List<Address>> ListModel = new List<List<Address>> { new List<Address> { new Address { City = "Brno" }, new Address { } } };

    private GuestbookEntry Model = new GuestbookEntry();

    private void AddMessage()
    {
        Model.Messages.Add(new Message());
    }

    private void RemoveItem(int index)
    {
        if (index >= 0 && index < Model.Messages.Count)
        {
            Model.Messages.RemoveAt(index);
        }
    }

    protected void HandleValidSubmit()
    {
        StatusClass = "alert-info";
        StatusMessage = DateTime.Now + " Handle valid submit";
    }

    protected void HandleInvalidSubmit()
    {
        StatusClass = "alert-danger";
        StatusMessage = DateTime.Now + " Handle invalid submit";
    }
}
