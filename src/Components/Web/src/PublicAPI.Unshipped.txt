#nullable enable
Microsoft.AspNetCore.Components.Forms.InputHidden
Microsoft.AspNetCore.Components.Forms.InputHidden.Element.get -> Microsoft.AspNetCore.Components.ElementReference?
Microsoft.AspNetCore.Components.Forms.InputHidden.Element.set -> void
Microsoft.AspNetCore.Components.Forms.InputHidden.InputHidden() -> void
Microsoft.AspNetCore.Components.Web.Image.Image
Microsoft.AspNetCore.Components.Web.Image.Image.AdditionalAttributes.get -> System.Collections.Generic.Dictionary<string!, object!>?
Microsoft.AspNetCore.Components.Web.Image.Image.AdditionalAttributes.set -> void
Microsoft.AspNetCore.Components.Web.Image.Image.DisposeAsync() -> System.Threading.Tasks.ValueTask
Microsoft.AspNetCore.Components.Web.Image.Image.Image() -> void
Microsoft.AspNetCore.Components.Web.Image.Image.Source.get -> Microsoft.AspNetCore.Components.Web.Image.ImageSource!
Microsoft.AspNetCore.Components.Web.Image.Image.Source.set -> void
Microsoft.AspNetCore.Components.Web.Image.ImageSource
Microsoft.AspNetCore.Components.Web.Image.ImageSource.CacheKey.get -> string!
Microsoft.AspNetCore.Components.Web.Image.ImageSource.ImageSource(byte[]! data, string! mimeType, string! cacheKey) -> void
Microsoft.AspNetCore.Components.Web.Image.ImageSource.ImageSource(System.IO.Stream! stream, string! mimeType, string! cacheKey) -> void
Microsoft.AspNetCore.Components.Web.Image.ImageSource.Length.get -> long?
Microsoft.AspNetCore.Components.Web.Image.ImageSource.MimeType.get -> string!
Microsoft.AspNetCore.Components.Web.Image.ImageSource.Stream.get -> System.IO.Stream!
Microsoft.AspNetCore.Components.Web.Internal.IInternalWebJSInProcessRuntime.InvokeJS(in Microsoft.JSInterop.Infrastructure.JSInvocationInfo invocationInfo) -> string!
override Microsoft.AspNetCore.Components.Forms.InputHidden.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder! builder) -> void
override Microsoft.AspNetCore.Components.Forms.InputHidden.TryParseValueFromString(string? value, out string? result, out string? validationErrorMessage) -> bool
virtual Microsoft.AspNetCore.Components.Routing.NavLink.ShouldMatch(string! uriAbsolute) -> bool
