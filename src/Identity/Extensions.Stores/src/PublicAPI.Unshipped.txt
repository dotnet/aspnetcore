#nullable enable
abstract Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindTokenByUniqueIndexAsync(TUser! user, string! loginProvider, string! name, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<TUserToken?>!
Microsoft.AspNetCore.Identity.IdentityPasskeyData
Microsoft.AspNetCore.Identity.IdentityPasskeyData.IdentityPasskeyData() -> void
Microsoft.AspNetCore.Identity.IdentityUserPasskey<TKey>
Microsoft.AspNetCore.Identity.IdentityUserPasskey<TKey>.IdentityUserPasskey() -> void
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.AttestationObject.get -> byte[]!
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.AttestationObject.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.ClientDataJson.get -> byte[]!
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.ClientDataJson.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.CreatedAt.get -> System.DateTimeOffset
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.CreatedAt.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.IsBackedUp.get -> bool
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.IsBackedUp.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.IsBackupEligible.get -> bool
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.IsBackupEligible.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.IsUserVerified.get -> bool
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.IsUserVerified.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.Name.get -> string?
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.Name.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.PublicKey.get -> byte[]!
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.PublicKey.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.SignCount.get -> uint
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.SignCount.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.Transports.get -> string![]?
virtual Microsoft.AspNetCore.Identity.IdentityPasskeyData.Transports.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityRoleClaim<TKey>.Id.get -> TKey
virtual Microsoft.AspNetCore.Identity.IdentityUserClaim<TKey>.Id.get -> TKey
virtual Microsoft.AspNetCore.Identity.IdentityUserLogin<TKey>.Id.get -> TKey
virtual Microsoft.AspNetCore.Identity.IdentityUserLogin<TKey>.Id.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityUserPasskey<TKey>.CredentialId.get -> byte[]!
virtual Microsoft.AspNetCore.Identity.IdentityUserPasskey<TKey>.CredentialId.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityUserPasskey<TKey>.Data.get -> Microsoft.AspNetCore.Identity.IdentityPasskeyData!
virtual Microsoft.AspNetCore.Identity.IdentityUserPasskey<TKey>.Data.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityUserPasskey<TKey>.UserId.get -> TKey
virtual Microsoft.AspNetCore.Identity.IdentityUserPasskey<TKey>.UserId.set -> void
virtual Microsoft.AspNetCore.Identity.IdentityUserToken<TKey>.Id.get -> TKey
virtual Microsoft.AspNetCore.Identity.IdentityUserToken<TKey>.Id.set -> void
