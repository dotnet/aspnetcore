#nullable enable
const Microsoft.AspNetCore.Authentication.Negotiate.NegotiateDefaults.AuthenticationScheme = "Negotiate" -> string!
Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext
Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext.AuthenticatedContext(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Authentication.AuthenticationScheme! scheme, Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions! options) -> void
Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext
Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext.AuthenticationFailedContext(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Authentication.AuthenticationScheme! scheme, Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions! options) -> void
Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext.Exception.get -> System.Exception!
Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext.Exception.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext
Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext.ChallengeContext(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Authentication.AuthenticationScheme! scheme, Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions! options, Microsoft.AspNetCore.Authentication.AuthenticationProperties! properties) -> void
Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext.Handled.get -> bool
Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext.HandleResponse() -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapContext
Microsoft.AspNetCore.Authentication.Negotiate.LdapContext.LdapContext(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Authentication.AuthenticationScheme! scheme, Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions! options, Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings! settings) -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapContext.LdapSettings.get -> Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings!
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.ClaimsCacheAbsoluteExpiration.get -> System.TimeSpan
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.ClaimsCacheAbsoluteExpiration.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.ClaimsCacheSize.get -> int
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.ClaimsCacheSize.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.ClaimsCacheSlidingExpiration.get -> System.TimeSpan
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.ClaimsCacheSlidingExpiration.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.Domain.get -> string!
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.Domain.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.EnableLdapClaimResolution.get -> bool
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.EnableLdapClaimResolution.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.IgnoreNestedGroups.get -> bool
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.IgnoreNestedGroups.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.LdapConnection.get -> System.DirectoryServices.Protocols.LdapConnection?
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.LdapConnection.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.LdapSettings() -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.MachineAccountName.get -> string?
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.MachineAccountName.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.MachineAccountPassword.get -> string?
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.MachineAccountPassword.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings.Validate() -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateDefaults
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.NegotiateEvents() -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnAuthenticated.get -> System.Func<Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext!, System.Threading.Tasks.Task!>!
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnAuthenticated.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnAuthenticationFailed.get -> System.Func<Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext!, System.Threading.Tasks.Task!>!
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnAuthenticationFailed.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnChallenge.get -> System.Func<Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext!, System.Threading.Tasks.Task!>!
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnChallenge.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnRetrieveLdapClaims.get -> System.Func<Microsoft.AspNetCore.Authentication.Negotiate.LdapContext!, System.Threading.Tasks.Task!>!
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.OnRetrieveLdapClaims.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.Events.get -> Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents!
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.Events.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.HandleRequestAsync() -> System.Threading.Tasks.Task<bool>!
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.NegotiateHandler(Microsoft.Extensions.Options.IOptionsMonitor<Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions!>! options, Microsoft.Extensions.Logging.ILoggerFactory! logger, System.Text.Encodings.Web.UrlEncoder! encoder) -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.NegotiateHandler(Microsoft.Extensions.Options.IOptionsMonitor<Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions!>! options, Microsoft.Extensions.Logging.ILoggerFactory! logger, System.Text.Encodings.Web.UrlEncoder! encoder, Microsoft.AspNetCore.Authentication.ISystemClock! clock) -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions.EnableLdap(string! domain) -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions.EnableLdap(System.Action<Microsoft.AspNetCore.Authentication.Negotiate.LdapSettings!>! configureSettings) -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions.Events.get -> Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents?
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions.Events.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions.NegotiateOptions() -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions.PersistKerberosCredentials.get -> bool
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions.PersistKerberosCredentials.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions.PersistNtlmCredentials.get -> bool
Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions.PersistNtlmCredentials.set -> void
Microsoft.AspNetCore.Authentication.Negotiate.PostConfigureNegotiateOptions
Microsoft.AspNetCore.Authentication.Negotiate.PostConfigureNegotiateOptions.PostConfigure(string? name, Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions! options) -> void
Microsoft.AspNetCore.Authentication.Negotiate.PostConfigureNegotiateOptions.PostConfigureNegotiateOptions(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Hosting.Server.IServerIntegratedAuth!>! serverAuthServices, Microsoft.Extensions.Logging.ILogger<Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler!>! logger) -> void
Microsoft.Extensions.DependencyInjection.NegotiateExtensions
override Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.CreateEventsAsync() -> System.Threading.Tasks.Task<object!>!
override Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.HandleAuthenticateAsync() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.AuthenticateResult!>!
override Microsoft.AspNetCore.Authentication.Negotiate.NegotiateHandler.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties! properties) -> System.Threading.Tasks.Task!
static Microsoft.Extensions.DependencyInjection.NegotiateExtensions.AddNegotiate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static Microsoft.Extensions.DependencyInjection.NegotiateExtensions.AddNegotiate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, string! authenticationScheme, string? displayName, System.Action<Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions!>! configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static Microsoft.Extensions.DependencyInjection.NegotiateExtensions.AddNegotiate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, string! authenticationScheme, System.Action<Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions!>! configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static Microsoft.Extensions.DependencyInjection.NegotiateExtensions.AddNegotiate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, System.Action<Microsoft.AspNetCore.Authentication.Negotiate.NegotiateOptions!>! configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
virtual Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.Authenticated(Microsoft.AspNetCore.Authentication.Negotiate.AuthenticatedContext! context) -> System.Threading.Tasks.Task!
virtual Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.AuthenticationFailed(Microsoft.AspNetCore.Authentication.Negotiate.AuthenticationFailedContext! context) -> System.Threading.Tasks.Task!
virtual Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.Challenge(Microsoft.AspNetCore.Authentication.Negotiate.ChallengeContext! context) -> System.Threading.Tasks.Task!
virtual Microsoft.AspNetCore.Authentication.Negotiate.NegotiateEvents.RetrieveLdapClaims(Microsoft.AspNetCore.Authentication.Negotiate.LdapContext! context) -> System.Threading.Tasks.Task!
