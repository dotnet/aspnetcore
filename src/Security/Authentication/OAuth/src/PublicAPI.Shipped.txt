#nullable enable
abstract Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimAction.Run(System.Text.Json.JsonElement userData, System.Security.Claims.ClaimsIdentity! identity, string! issuer) -> void
Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions
Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimAction
Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimAction.ClaimAction(string! claimType, string! valueType) -> void
Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimAction.ClaimType.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimAction.ValueType.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection
Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection.Add(Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimAction! action) -> void
Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection.ClaimActionCollection() -> void
Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection.Clear() -> void
Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimAction!>!
Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection.Remove(string! claimType) -> void
Microsoft.AspNetCore.Authentication.OAuth.Claims.CustomJsonClaimAction
Microsoft.AspNetCore.Authentication.OAuth.Claims.CustomJsonClaimAction.CustomJsonClaimAction(string! claimType, string! valueType, System.Func<System.Text.Json.JsonElement, string?>! resolver) -> void
Microsoft.AspNetCore.Authentication.OAuth.Claims.CustomJsonClaimAction.Resolver.get -> System.Func<System.Text.Json.JsonElement, string?>!
Microsoft.AspNetCore.Authentication.OAuth.Claims.DeleteClaimAction
Microsoft.AspNetCore.Authentication.OAuth.Claims.DeleteClaimAction.DeleteClaimAction(string! claimType) -> void
Microsoft.AspNetCore.Authentication.OAuth.Claims.JsonKeyClaimAction
Microsoft.AspNetCore.Authentication.OAuth.Claims.JsonKeyClaimAction.JsonKey.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.Claims.JsonKeyClaimAction.JsonKeyClaimAction(string! claimType, string! valueType, string! jsonKey) -> void
Microsoft.AspNetCore.Authentication.OAuth.Claims.JsonSubKeyClaimAction
Microsoft.AspNetCore.Authentication.OAuth.Claims.JsonSubKeyClaimAction.JsonSubKeyClaimAction(string! claimType, string! valueType, string! jsonKey, string! subKey) -> void
Microsoft.AspNetCore.Authentication.OAuth.Claims.JsonSubKeyClaimAction.SubKey.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.Claims.MapAllClaimsAction
Microsoft.AspNetCore.Authentication.OAuth.Claims.MapAllClaimsAction.MapAllClaimsAction() -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthChallengeProperties
Microsoft.AspNetCore.Authentication.OAuth.OAuthChallengeProperties.OAuthChallengeProperties() -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthChallengeProperties.OAuthChallengeProperties(System.Collections.Generic.IDictionary<string!, string?>! items) -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthChallengeProperties.OAuthChallengeProperties(System.Collections.Generic.IDictionary<string!, string?>? items, System.Collections.Generic.IDictionary<string!, object?>? parameters) -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthChallengeProperties.Scope.get -> System.Collections.Generic.ICollection<string!>!
Microsoft.AspNetCore.Authentication.OAuth.OAuthChallengeProperties.Scope.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext.Code.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext.OAuthCodeExchangeContext(Microsoft.AspNetCore.Authentication.AuthenticationProperties! properties, string! code, string! redirectUri) -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext.Properties.get -> Microsoft.AspNetCore.Authentication.AuthenticationProperties!
Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext.RedirectUri.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.OAuthConstants
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.AccessToken.get -> string?
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.Backchannel.get -> System.Net.Http.HttpClient!
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.ExpiresIn.get -> System.TimeSpan?
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.Identity.get -> System.Security.Claims.ClaimsIdentity?
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.OAuthCreatingTicketContext(System.Security.Claims.ClaimsPrincipal! principal, Microsoft.AspNetCore.Authentication.AuthenticationProperties! properties, Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Authentication.AuthenticationScheme! scheme, Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions! options, System.Net.Http.HttpClient! backchannel, Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse! tokens, System.Text.Json.JsonElement user) -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.RefreshToken.get -> string?
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.RunClaimActions() -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.RunClaimActions(System.Text.Json.JsonElement userData) -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.TokenResponse.get -> Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse!
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.TokenType.get -> string?
Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext.User.get -> System.Text.Json.JsonElement
Microsoft.AspNetCore.Authentication.OAuth.OAuthDefaults
Microsoft.AspNetCore.Authentication.OAuth.OAuthEvents
Microsoft.AspNetCore.Authentication.OAuth.OAuthEvents.OAuthEvents() -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthEvents.OnCreatingTicket.get -> System.Func<Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext!, System.Threading.Tasks.Task!>!
Microsoft.AspNetCore.Authentication.OAuth.OAuthEvents.OnCreatingTicket.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthEvents.OnRedirectToAuthorizationEndpoint.get -> System.Func<Microsoft.AspNetCore.Authentication.RedirectContext<Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions!>!, System.Threading.Tasks.Task!>!
Microsoft.AspNetCore.Authentication.OAuth.OAuthEvents.OnRedirectToAuthorizationEndpoint.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>
Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.Backchannel.get -> System.Net.Http.HttpClient!
Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.Events.get -> Microsoft.AspNetCore.Authentication.OAuth.OAuthEvents!
Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.Events.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.OAuthHandler(Microsoft.Extensions.Options.IOptionsMonitor<TOptions!>! options, Microsoft.Extensions.Logging.ILoggerFactory! logger, System.Text.Encodings.Web.UrlEncoder! encoder) -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.OAuthHandler(Microsoft.Extensions.Options.IOptionsMonitor<TOptions!>! options, Microsoft.Extensions.Logging.ILoggerFactory! logger, System.Text.Encodings.Web.UrlEncoder! encoder, Microsoft.AspNetCore.Authentication.ISystemClock! clock) -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.AdditionalAuthorizationParameters.get -> System.Collections.Generic.IDictionary<string!, string!>!
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.AuthorizationEndpoint.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.AuthorizationEndpoint.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.ClaimActions.get -> Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection!
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.ClientId.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.ClientId.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.ClientSecret.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.ClientSecret.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.Events.get -> Microsoft.AspNetCore.Authentication.OAuth.OAuthEvents!
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.Events.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.OAuthOptions() -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.Scope.get -> System.Collections.Generic.ICollection<string!>!
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.StateDataFormat.get -> Microsoft.AspNetCore.Authentication.ISecureDataFormat<Microsoft.AspNetCore.Authentication.AuthenticationProperties!>!
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.StateDataFormat.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.TokenEndpoint.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.TokenEndpoint.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.UsePkce.get -> bool
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.UsePkce.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.UserInformationEndpoint.get -> string!
Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.UserInformationEndpoint.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.AccessToken.get -> string?
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.AccessToken.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.Dispose() -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.Error.get -> System.Exception?
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.Error.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.ExpiresIn.get -> string?
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.ExpiresIn.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.RefreshToken.get -> string?
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.RefreshToken.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.Response.get -> System.Text.Json.JsonDocument?
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.Response.set -> void
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.TokenType.get -> string?
Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.TokenType.set -> void
Microsoft.Extensions.DependencyInjection.OAuthExtensions
Microsoft.Extensions.DependencyInjection.OAuthPostConfigureOptions<TOptions, THandler>
Microsoft.Extensions.DependencyInjection.OAuthPostConfigureOptions<TOptions, THandler>.OAuthPostConfigureOptions(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider! dataProtection) -> void
Microsoft.Extensions.DependencyInjection.OAuthPostConfigureOptions<TOptions, THandler>.PostConfigure(string? name, TOptions! options) -> void
override Microsoft.AspNetCore.Authentication.OAuth.Claims.CustomJsonClaimAction.Run(System.Text.Json.JsonElement userData, System.Security.Claims.ClaimsIdentity! identity, string! issuer) -> void
override Microsoft.AspNetCore.Authentication.OAuth.Claims.DeleteClaimAction.Run(System.Text.Json.JsonElement userData, System.Security.Claims.ClaimsIdentity! identity, string! issuer) -> void
override Microsoft.AspNetCore.Authentication.OAuth.Claims.JsonKeyClaimAction.Run(System.Text.Json.JsonElement userData, System.Security.Claims.ClaimsIdentity! identity, string! issuer) -> void
override Microsoft.AspNetCore.Authentication.OAuth.Claims.JsonSubKeyClaimAction.Run(System.Text.Json.JsonElement userData, System.Security.Claims.ClaimsIdentity! identity, string! issuer) -> void
override Microsoft.AspNetCore.Authentication.OAuth.Claims.MapAllClaimsAction.Run(System.Text.Json.JsonElement userData, System.Security.Claims.ClaimsIdentity! identity, string! issuer) -> void
override Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.CreateEventsAsync() -> System.Threading.Tasks.Task<object!>!
override Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties! properties) -> System.Threading.Tasks.Task!
override Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync() -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.HandleRequestResult!>!
override Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions.Validate() -> void
static Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.DeleteClaim(this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection! collection, string! claimType) -> void
static Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.DeleteClaims(this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection! collection, params string![]! claimTypes) -> void
static Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapAll(this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection! collection) -> void
static Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapAllExcept(this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection! collection, params string![]! exclusions) -> void
static Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapCustomJson(this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection! collection, string! claimType, string! valueType, System.Func<System.Text.Json.JsonElement, string?>! resolver) -> void
static Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapCustomJson(this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection! collection, string! claimType, System.Func<System.Text.Json.JsonElement, string?>! resolver) -> void
static Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapJsonKey(this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection! collection, string! claimType, string! jsonKey) -> void
static Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapJsonKey(this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection! collection, string! claimType, string! jsonKey, string! valueType) -> void
static Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapJsonSubKey(this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection! collection, string! claimType, string! jsonKey, string! subKey) -> void
static Microsoft.AspNetCore.Authentication.ClaimActionCollectionMapExtensions.MapJsonSubKey(this Microsoft.AspNetCore.Authentication.OAuth.Claims.ClaimActionCollection! collection, string! claimType, string! jsonKey, string! subKey, string! valueType) -> void
static Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.Failed(System.Exception! error) -> Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse!
static Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse.Success(System.Text.Json.JsonDocument! response) -> Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse!
static Microsoft.Extensions.DependencyInjection.OAuthExtensions.AddOAuth(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, string! authenticationScheme, string! displayName, System.Action<Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions!>! configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static Microsoft.Extensions.DependencyInjection.OAuthExtensions.AddOAuth(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, string! authenticationScheme, System.Action<Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions!>! configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static Microsoft.Extensions.DependencyInjection.OAuthExtensions.AddOAuth<TOptions, THandler>(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, string! authenticationScheme, string! displayName, System.Action<TOptions!>! configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static Microsoft.Extensions.DependencyInjection.OAuthExtensions.AddOAuth<TOptions, THandler>(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, string! authenticationScheme, System.Action<TOptions!>! configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static readonly Microsoft.AspNetCore.Authentication.OAuth.OAuthChallengeProperties.ScopeKey -> string!
static readonly Microsoft.AspNetCore.Authentication.OAuth.OAuthConstants.CodeChallengeKey -> string!
static readonly Microsoft.AspNetCore.Authentication.OAuth.OAuthConstants.CodeChallengeMethodKey -> string!
static readonly Microsoft.AspNetCore.Authentication.OAuth.OAuthConstants.CodeChallengeMethodS256 -> string!
static readonly Microsoft.AspNetCore.Authentication.OAuth.OAuthConstants.CodeVerifierKey -> string!
static readonly Microsoft.AspNetCore.Authentication.OAuth.OAuthDefaults.DisplayName -> string!
virtual Microsoft.AspNetCore.Authentication.OAuth.OAuthChallengeProperties.SetScope(params string![]! scopes) -> void
virtual Microsoft.AspNetCore.Authentication.OAuth.OAuthEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.OAuth.OAuthCreatingTicketContext! context) -> System.Threading.Tasks.Task!
virtual Microsoft.AspNetCore.Authentication.OAuth.OAuthEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.RedirectContext<Microsoft.AspNetCore.Authentication.OAuth.OAuthOptions!>! context) -> System.Threading.Tasks.Task!
virtual Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties! properties, string! redirectUri) -> string!
virtual Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.CreateTicketAsync(System.Security.Claims.ClaimsIdentity! identity, Microsoft.AspNetCore.Authentication.AuthenticationProperties! properties, Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse! tokens) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.AuthenticationTicket!>!
virtual Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext! context) -> System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse!>!
virtual Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.FormatScope() -> string!
virtual Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.FormatScope(System.Collections.Generic.IEnumerable<string!>! scopes) -> string!
