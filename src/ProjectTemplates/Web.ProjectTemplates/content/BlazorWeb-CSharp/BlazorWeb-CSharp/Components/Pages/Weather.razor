@page "/weather"
@*#if (!InteractiveAtRoot) -->
@attribute [StreamRendering]
##endif*@
@inject NavigationManager NavigationManager

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th aria-label="Temperature in Fahrenheit">Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                    <td>
@*#if (InteractiveAtRoot) -->
                        <button class="btn btn-primary" @onclick="() => NavigateToDetails(forecast.Id)">More info</button>
##else
                        <a href="@($"/weather/details/{forecast.Id}")">More info</a>
##endif*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
@*#if (InteractiveAtRoot) -->
        // Simulate asynchronous loading to demonstrate a loading indicator
##else
        // Simulate asynchronous loading to demonstrate streaming rendering
##endif*@
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Id = index,
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();
    }

@*#if (InteractiveAtRoot) -->
    private void NavigateToDetails(int id)
    {
        NavigationManager.NavigateTo($"/weather/details/{id}");
    }
##endif*@
}
