{
  "$schema": "https://json.schemastore.org/template",
  "author": "Microsoft",
  "classifications": [
    "Web",
    "Blazor",
    "WebAssembly",
    "PWA"
  ],
  "name": "Blazor WebAssembly Standalone App",
  "defaultName": "BlazorApp",
  "description": "A project template for creating a Blazor app that runs on WebAssembly. This template can be used for web apps with rich dynamic user interfaces (UIs).",
  "groupIdentity": "Microsoft.Web.Blazor.Wasm",
  "precedence": "9900",
  "guids": [
    "4C26868E-5E7C-458D-82E3-040509D0C71F",
    "5990939C-7E7B-4CFA-86FF-44CA5756498A",
    "650B3CE7-2E93-4CC4-9F46-466686815EAA",
    "0AFFA7FD-4E37-4636-AB91-3753E746DB98",
    "53bc9b9d-9d6a-45d4-8429-2a2761773502" // Client ID
  ],
  "identity": "Microsoft.Web.Blazor.Wasm.CSharp.9.0",
  "thirdPartyNotices": "https://aka.ms/aspnetcore/9.0-third-party-notices",
  "preferNameDirectory": true,
  "primaryOutputs": [
    {
      "path": "ComponentsWebAssembly-CSharp.csproj"
    }
  ],
  "shortName": "blazorwasm",
  "sourceName": "ComponentsWebAssembly-CSharp",
  "sources": [
    {
      "source": "./",
      "target": "./",
      "exclude": [
        ".template.config/**"
      ],
      "copyOnly": [
        "**/wwwroot/bootstrap/**"
      ],
      "modifiers": [
        {
          "condition": "(!PWA)",
          "exclude": [
            "wwwroot/service-worker*.js",
            "wwwroot/manifest.webmanifest",
            "wwwroot/icon-512.png"
          ]
        },
        {
          "condition": "(!UseProgramMain)",
          "exclude": [
            "Program.Main.cs"
          ]
        },
        {
          "condition": "(UseProgramMain)",
          "exclude": [
            "Program.cs"
          ],
          "rename": {
            "Program.Main.cs": "Program.cs"
          }
        },
        {
          "condition": "(!IndividualLocalAuth)",
          "exclude": [
            "wwwroot/appsettings.Development.json"
          ]
        },
        {
          "condition": "(NoAuth)",
          "rename": {
            "Layout/MainLayout.NoAuth.razor": "Layout/MainLayout.razor"
          },
          "exclude": [
            "Pages/Authentication.razor",
            "Layout/LoginDisplay.razor",
            "Layout/MainLayout.Auth.razor",
            "Layout/RedirectToLogin.razor",
            "wwwroot/appsettings.Development.json",
            "wwwroot/appsettings.json"
          ]
        },
        {
          "condition": "(!NoAuth)",
          "rename": {
            "Layout/MainLayout.Auth.razor": "Layout/MainLayout.razor"
          },
          "exclude": [
            "Layout/MainLayout.NoAuth.razor"
          ]
        },
        {
          "condition": "(!GenerateApi)",
          "rename": {
            "Layout/NavMenu.NoApi.razor": "Layout/NavMenu.razor"
          },
          "exclude": [
            "Pages/CallWebApi.razor",
            "Layout/NavMenu.CallsWebApi.razor"
          ]
        },
        {
          "condition": "(GenerateApi)",
          "rename": {
            "Layout/NavMenu.CallsWebApi.razor": "Layout/NavMenu.razor"
          },
          "exclude": [
            "Layout/NavMenu.NoApi.razor"
          ]
        },
        {
          "condition": "(ExcludeLaunchSettings)",
          "exclude": [
            "Properties/launchSettings.json"
          ]
        },
        {
          "condition": "(!SampleContent)",
          "exclude": [
            "Pages/Counter.*",
            "Pages/Weather.*",
            "Layout/MainLayout.razor.css",
            "Layout/NavMenu.*",
            "wwwroot/lib/**",
            "wwwroot/favicon.png",
            "wwwroot/sample-data/weather.json"
          ]
        }
      ]
    }
  ],
  "symbols": {
    "Framework": {
      "type": "parameter",
      "description": "The target framework for the project.",
      "datatype": "choice",
      "choices": [
        {
          "choice": "net9.0",
          "description": "Target net9.0"
        }
      ],
      "replaces": "net9.0",
      "defaultValue": "net9.0"
    },
    "HostIdentifier": {
      "type": "bind",
      "binding": "HostIdentifier"
    },
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "If specified, skips the automatic restore of the project on create.",
      "defaultValue": "false"
    },
    "auth": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "None",
          "description": "No authentication"
        },
        {
          "choice": "Individual",
          "description": "Individual authentication"
        },
        {
          "choice": "IndividualB2C",
          "description": "Individual authentication with Azure AD B2C"
        },
        {
          "choice": "SingleOrg",
          "description": "Organizational authentication for a single tenant"
        }
      ],
      "defaultValue": "None",
      "description": "The type of authentication to use"
    },
    "Authority": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "https://login.microsoftonline.com/",
      "description": "The authority of the OIDC provider (use with standalone Individual auth)."
    },
    "MissingAuthority": {
      "type": "computed",
      "value": "(IndividualAuth && Authority == \"https://login.microsoftonline.com/\" && ClientId == \"33333333-3333-3333-33333333333333333\")"
    },
    "AAdB2CInstance": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "https:////aadB2CInstance.b2clogin.com/",
      "description": "The Azure Active Directory B2C instance to connect to (use with IndividualB2C auth)."
    },
    "SignUpSignInPolicyId": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "b2c_1_susi",
      "replaces": "MySignUpSignInPolicyId",
      "description": "The sign-in and sign-up policy ID for this project (use with IndividualB2C auth)."
    },
    "AADInstance": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "https://login.microsoftonline.com/",
      "replaces": "https:////login.microsoftonline.com/",
      "description": "The Azure Active Directory instance to connect to (use with SingleOrg auth)."
    },
    "ClientId": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "33333333-3333-3333-33333333333333333",
      "description": "The Client ID for this project (use with IndividualB2C, SingleOrg or Individual auth in standalone scenarios)."
    },
    "Domain": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "qualified.domain.name",
      "description": "The domain for the directory tenant (use with SingleOrg or IndividualB2C auth)."
    },
    "AppIDUri": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "api.id.uri",
      "description": "The App ID Uri for the server API we want to call (use with SingleOrg or IndividualB2C auth)."
    },
    "APIClientId": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "11111111-1111-1111-11111111111111111",
      "description": "The Client ID for the API that the server hosts (use with IndividualB2C, SingleOrg)."
    },
    "DefaultScope": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "api-scope",
      "defaultValue": "access_as_user",
      "description": "The API scope the client needs to request to provision an access token. (use with IndividualB2C, SingleOrg)."
    },
    "TenantId": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "22222222-2222-2222-2222-222222222222",
      "description": "The TenantId ID of the directory to connect to (use with SingleOrg auth)."
    },
    "OrgReadAccess": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Whether or not to allow this application read access to the directory (only applies to SingleOrg)."
    },
    "UserSecretsId": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "aspnet-BlazorServerWeb-CSharp-53bc9b9d-9d6a-45d4-8429-2a2761773502",
      "defaultValue": "aspnet-BlazorServerWeb-CSharp-53bc9b9d-9d6a-45d4-8429-2a2761773502",
      "description": "The ID to use for secrets (use with OrgReadAccess or Individual auth)."
    },
    "ExcludeLaunchSettings": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Whether to exclude launchSettings.json from the generated template."
    },
    "kestrelHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTP endpoint in launchSettings.json."
    },
    "kestrelHttpPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 5000,
        "high": 5300
      }
    },
    "kestrelHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "kestrelHttpPort",
        "fallbackVariableName": "kestrelHttpPortGenerated"
      },
      "replaces": "5000"
    },
    "kestrelHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTPS endpoint in launchSettings.json. This option is only applicable when the parameter no-https is not used (no-https will be ignored if either IndividualAuth or OrganizationalAuth is used)."
    },
    "kestrelHttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 7000,
        "high": 7300
      }
    },
    "kestrelHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "kestrelHttpsPort",
        "fallbackVariableName": "kestrelHttpsPortGenerated"
      },
      "replaces": "5001"
    },
    "iisHttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the IIS Express HTTP endpoint in launchSettings.json."
    },
    "iisHttpPortGenerated": {
      "type": "generated",
      "generator": "port"
    },
    "iisHttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "iisHttpPort",
        "fallbackVariableName": "iisHttpPortGenerated"
      },
      "replaces": "8080"
    },
    "iisHttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the IIS Express HTTPS endpoint in launchSettings.json. This option is only applicable when the parameter no-https is not used (no-https will be ignored if either IndividualAuth or OrganizationalAuth is used)."
    },
    "iisHttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 44300,
        "high": 44399
      }
    },
    "iisHttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "iisHttpsPort",
        "fallbackVariableName": "iisHttpsPortGenerated"
      },
      "replaces": "44300"
    },
    "PWA": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "_Progressive Web Application",
      "description": "If specified, produces a Progressive Web Application (PWA) supporting installation and offline use."
    },
    "OrganizationalAuth": {
      "type": "computed",
      "value": "(auth == \"SingleOrg\" || auth == \"MultiOrg\")"
    },
    "MultiOrgAuth": {
      "type": "computed",
      "value": "(auth == \"MultiOrg\")"
    },
    "SingleOrgAuth": {
      "type": "computed",
      "value": "(auth == \"SingleOrg\")"
    },
    "IndividualLocalAuth": {
      "type": "computed",
      "value": "(auth == \"Individual\")"
    },
    "IndividualAuth": {
      "type": "computed",
      "value": "(auth == \"Individual\" || auth == \"IndividualB2C\")"
    },
    "IndividualB2CAuth": {
      "type": "computed",
      "value": "(auth == \"IndividualB2C\")"
    },
    "IncludeSampleContent": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "displayName": "_Include sample pages",
      "description": "Configures whether to add sample pages and styling to demonstrate basic usage patterns."
    },
    "Empty": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Configures whether to omit sample pages and styling that demonstrate basic usage patterns."
    },
    "SampleContent": {
      "type": "computed",
      "value": "(((IncludeSampleContent && (HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\"))) || ((!Empty && (HostIdentifier == \"dotnetcli\" || HostIdentifier == \"dotnetcli-preview\"))))"
    },
    "NoAuth": {
      "type": "computed",
      "value": "(!(IndividualAuth || OrganizationalAuth))"
    },
    "RequiresHttps": {
      "type": "computed",
      "value": "(OrganizationalAuth || IndividualAuth)"
    },
    "HasHttpProfile": {
      "type": "computed",
      "value": "(!RequiresHttps)"
    },
    "HasHttpsProfile": {
      "type": "computed",
      "value": "(RequiresHttps || !NoHttps)"
    },
    "NoHttps": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Whether to turn off HTTPS. This option only applies if Individual, IndividualB2C, SingleOrg, or MultiOrg aren't used for --auth."
    },
    "UseLocalDB": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Whether to use LocalDB instead of SQLite. This option only applies if --auth Individual or --auth IndividualB2C is specified."
    },
    "copyrightYear": {
      "type": "generated",
      "generator": "now",
      "replaces": "copyrightYear",
      "parameters": {
        "format": "yyyy"
      }
    },
    "CalledApiUrl": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "[WebApiUrl]",
      "defaultValue": "https://graph.microsoft.com/v1.0",
      "description": "URL of the API to call from the web app. This option only applies if --auth SingleOrg, --auth MultiOrg or --auth IndividualB2C without and ASP.NET Core host is specified."
    },
    "CalledApiScopes": {
      "type": "parameter",
      "datatype": "string",
      "replaces": "user.read",
      "description": "Scopes to request to call the API from the web app. This option only applies if --auth SingleOrg, --auth MultiOrg or --auth IndividualB2C without and ASP.NET Core host is specified."
    },
    "GenerateApi": {
      "type": "computed",
      "value": "(IndividualB2CAuth && (CalledApiUrl != \"https://graph.microsoft.com/v1.0\" || CalledApiScopes != \"user.read\"))"
    },
    "UseProgramMain": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "displayName": "Do not use _top-level statements",
      "description": "Whether to generate an explicit Program class and Main method instead of top-level statements."
    }
  },
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "postActions": [
    {
      "id": "restore",
      "condition": "(!skipRestore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ],
      "args": {
        "files": ["ComponentsWebAssembly-CSharp.csproj"]
      },
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    },
    {
      "id": "open-file",
      "condition": "(IndividualLocalAuth && HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
      "description": "Opens Readme.txt in the editor",
      "manualInstructions": [],
      "actionId": "84C0DA21-51C8-4541-9940-6CA19AF04EE6",
      "args": {
        "files": "0"
      },
      "continueOnError": true
    }
  ]
}
