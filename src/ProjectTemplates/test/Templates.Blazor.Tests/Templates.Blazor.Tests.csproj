<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <TestGroupName>ProjectTemplates.Blazor.E2ETests</TestGroupName>
    <DefineConstants>$(DefineConstants);XPLAT</DefineConstants>

    <RequiresDelayedBuild>true</RequiresDelayedBuild>

    <RunTemplateTests Condition="'$(RunTemplateTests)' == ''">true</RunTemplateTests>
    <RunBlazorPlaywrightTemplateTests Condition="'$(RunBlazorPlaywrightTemplateTests)' == ''">$(RunTemplateTests)</RunBlazorPlaywrightTemplateTests>
    <SkipTests Condition="'$(RunBlazorPlaywrightTemplateTests)' != 'true'">true</SkipTests>
    <BuildHelixPayload Condition="'$(RunBlazorPlaywrightTemplateTests)' != 'true'">false</BuildHelixPayload>

    <BaseOutputPath />
    <OutputPath />

    <!-- https://github.com/dotnet/aspnetcore/issues/38818 -->
    <BuildHelixPayload>false</BuildHelixPayload>

    <!-- Properties that affect test runs -->
    <!-- TestTemplateCreationFolder is the folder where the templates will be created. Will point out to $(OutputDir)$(TestTemplateCreationFolder) -->
    <TestTemplateCreationFolder>TestTemplates\</TestTemplateCreationFolder>
    <RestoreFolderName>Blazor</RestoreFolderName>
    <TestDependsOnAspNetPackages>true</TestDependsOnAspNetPackages>
    <TestDependsOnMssql>true</TestDependsOnMssql>
    <TestDependsOnPlaywright>true</TestDependsOnPlaywright>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="$(SharedSourceRoot)CommandLineUtils\**\*.cs" />
    <Compile Include="$(SharedSourceRoot)CertificateGeneration\**\*.cs" LinkBase="shared\CertificateGeneration" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="$(SharedSourceRoot)Process\*.cs" LinkBase="shared\Process" />
    <Compile Include="..\..\Shared\**" LinkBase="Helpers" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="playwrightSettings.*.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <DependentUpon>playwrightSettings.json</DependentUpon>
    </Content>
    <Content Include="playwrightSettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.Extensions.Configuration" />
    <Reference Include="Microsoft.Extensions.Configuration.Json" />
    <Reference Include="AngleSharp" />
    <Reference Include="System.Net.Http" />
    <Reference Include="Microsoft.AspNetCore.Components.WebAssembly" />
    <Reference Include="Microsoft.Playwright" Condition="'$(IsPlaywrightAvailable)' == 'true'" />
    <Reference Include="Microsoft.Playwright" ExcludeAssets="build" Condition="'$(IsPlaywrightAvailable)' != 'true'" />
    <ProjectReference Include="$(RepoRoot)src\Framework\App.Runtime\src\Microsoft.AspNetCore.App.Runtime.csproj" Private="false" ReferenceOutputAssembly="false" SkipGetTargetFrameworkProperties="true" />

    <ProjectReference Include="$(RepoRoot)src\Hosting\Server.IntegrationTesting\src\Microsoft.AspNetCore.Server.IntegrationTesting.csproj" />
    <ProjectReference Include="$(RepoRoot)src\Shared\BrowserTesting\src\Microsoft.AspNetCore.BrowserTesting.csproj" />
    <ProjectReference Include="..\..\Web.ProjectTemplates\Microsoft.DotNet.Web.ProjectTemplates.csproj" Private="false" ReferenceOutputAssembly="false" SkipGetTargetFrameworkProperties="true" />
  </ItemGroup>

  <!-- Shared testing infrastructure for running E2E template tests -->
  <Import Project="..\..\TestInfrastructure\PrepareForTest.targets" />

  <Target Name="PublishAssets" AfterTargets="Publish">
    <ItemGroup>
      <_PublishFiles Include="$(OutputPath).playwright\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(_PublishFiles)" DestinationFolder="$(PublishDir)\.playwright\%(_PublishFiles.RecursiveDir)\" />
  </Target>
</Project>
