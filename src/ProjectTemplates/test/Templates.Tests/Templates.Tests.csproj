<Project Sdk="Microsoft.NET.Sdk">
  <!-- Shared testing infrastructure for running E2E tests using selenium -->
  <Import Condition="'$(SkipTestBuild)' != 'true'" Project="$(SharedSourceRoot)E2ETesting\E2ETesting.props" />

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <TestGroupName>ProjectTemplates.Tests</TestGroupName>
    <DefineConstants>$(DefineConstants);XPLAT</DefineConstants>

    <RunTemplateTests Condition="'$(RunTemplateTests)' == ''">true</RunTemplateTests>
    <SkipTests Condition="'$(RunTemplateTests)' != 'true'">true</SkipTests>
    <BuildHelixPayload Condition="'$(RunTemplateTests)' != 'true'">false</BuildHelixPayload>

    <BaseOutputPath />
    <OutputPath />

    <!-- Properties that affect test runs -->
    <!-- TestTemplateCreationFolder is the folder where the templates will be created. Will point out to $(OutputDir)$(TestTemplateCreationFolder) -->
    <TestTemplateCreationFolder>TestTemplates\</TestTemplateCreationFolder>
    <RestoreFolderName>Other</RestoreFolderName>
    <TestDependsOnAspNetPackages>true</TestDependsOnAspNetPackages>
    <HelixTimeout>01:00:00</HelixTimeout>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="$(SharedSourceRoot)CommandLineUtils\**\*.cs" />
    <Compile Include="$(SharedSourceRoot)CertificateGeneration\**\*.cs" LinkBase="shared\CertificateGeneration" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="template-baselines.json" />
    <Compile Include="$(SharedSourceRoot)Process\*.cs" LinkBase="shared\Process" />
    <Compile Include="..\..\Shared\**" LinkBase="Helpers" />
  </ItemGroup>

  <ItemGroup>
    <!-- We need the actual templates in the output directory for tests to verify file encodings. -->
    <Content Include="..\..\Web.ProjectTemplates\**" LinkBase="Assets\Web.ProjectTemplates" />
    <Content Include="..\..\Web.ItemTemplates\**" LinkBase="Assets\Web.ItemTemplates" />
    <Content Include="..\..\Web.Client.ItemTemplates\**" LinkBase="Assets\Web.Client.ItemTemplates" />
  </ItemGroup>

  <ItemGroup>
    <HelixContent Include="$(OutputPath)$(TargetFramework)Assets\**" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="AngleSharp" />
    <Reference Include="System.Net.Http" />
    <ProjectReference Include="$(RepoRoot)src\Framework\App.Runtime\src\Microsoft.AspNetCore.App.Runtime.csproj"
      Private="false"
      ReferenceOutputAssembly="false"
      SkipGetTargetFrameworkProperties="true" />

    <ProjectReference Include="$(RepoRoot)src\Hosting\Server.IntegrationTesting\src\Microsoft.AspNetCore.Server.IntegrationTesting.csproj" />
    <ProjectReference Include="$(RepoRoot)src\Shared\BrowserTesting\src\Microsoft.AspNetCore.BrowserTesting.csproj" />
    <ProjectReference Include="../../Web.Client.ItemTemplates/Microsoft.DotNet.Web.Client.ItemTemplates.csproj"
      Private="false"
      ReferenceOutputAssembly="false"
      SkipGetTargetFrameworkProperties="true" />
    <ProjectReference Include="../../Web.ItemTemplates/Microsoft.DotNet.Web.ItemTemplates.csproj"
      Private="false"
      ReferenceOutputAssembly="false"
      SkipGetTargetFrameworkProperties="true" />
    <ProjectReference Include="../../Web.ProjectTemplates/Microsoft.DotNet.Web.ProjectTemplates.csproj"
      Private="false"
      ReferenceOutputAssembly="false"
      SkipGetTargetFrameworkProperties="true" />
  </ItemGroup>

  <PropertyGroup>
    <PreserveExistingLogsInOutput Condition="'$(PreserveExistingLogsInOutput)' == '' AND '$(ContinuousIntegrationBuild)' == 'true'">true</PreserveExistingLogsInOutput>
    <PreserveExistingLogsInOutput Condition="'$(PreserveExistingLogsInOutput)' == ''">false</PreserveExistingLogsInOutput>
  </PropertyGroup>

  <!-- Shared testing infrastructure for running E2E tests -->
  <Import Condition="'$(SkipTestBuild)' != 'true'" Project="..\..\TestInfrastructure\PrepareForTest.targets" />
</Project>
