<Project>
  <PropertyGroup>
    <TestPackageRestorePath>$([MSBuild]::NormalizeDirectory('$(RepoRoot)', '.packages', '$(RestoreFolderName)'))</TestPackageRestorePath>
  </PropertyGroup>

  <ItemGroup>
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
      <_Parameter1>DotNetEfFullPath</_Parameter1>
      <_Parameter2>$([MSBuild]::EnsureTrailingSlash('$(NuGetPackageRoot)'))dotnet-ef/$(DotnetEfVersion)/tools/net8.0/any/dotnet-ef.dll</_Parameter2>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
      <_Parameter1>TestPackageRestorePath</_Parameter1>
      <_Parameter2>$(TestPackageRestorePath)</_Parameter2>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
      <_Parameter1>Test.DefaultTargetFramework</_Parameter1>
      <_Parameter2>$(DefaultNetCoreTargetFramework)</_Parameter2>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute" Condition="'$(ContinuousIntegrationBuild)' == 'true'">
      <_Parameter1>ContinuousIntegrationBuild</_Parameter1>
      <_Parameter2>true</_Parameter2>
    </AssemblyAttribute>
  </ItemGroup>

  <Target Name="PrepareForTest" BeforeTargets="GetAssemblyAttributes" Condition=" '$(DesignTimeBuild)' != 'true' ">
    <PropertyGroup>
      <TestTemplateCreationFolder>$([MSBuild]::NormalizePath('$(OutputPath)$(TestTemplateCreationFolder)'))</TestTemplateCreationFolder>
      <CustomTemplateHivePath>$(TestTemplateCreationFolder)\Hives\$([System.Guid]::NewGuid())\.templateengine</CustomTemplateHivePath>
      <TemplateTestDotNetRoot Condition="'$(IsHelixJob)' != 'true'">$(TestTemplateCreationFolder)dotnet\</TemplateTestDotNetRoot>
      <_DotNetHostFileName>dotnet</_DotNetHostFileName>
      <_DotNetHostFileName Condition="$([MSBuild]::IsOSPlatform(`Windows`))">dotnet.exe</_DotNetHostFileName>
    </PropertyGroup>

    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>ArtifactsShippingPackagesDir</_Parameter1>
        <_Parameter2>$(ArtifactsShippingPackagesDir)</_Parameter2>
      </AssemblyAttribute>

      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>ArtifactsLogDir</_Parameter1>
        <_Parameter2>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'log'))</_Parameter2>
      </AssemblyAttribute>

      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>ArtifactsNonShippingPackagesDir</_Parameter1>
        <_Parameter2>$(ArtifactsNonShippingPackagesDir)</_Parameter2>
      </AssemblyAttribute>

      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>TestTemplateCreationFolder</_Parameter1>
        <_Parameter2>$(TestTemplateCreationFolder)</_Parameter2>
      </AssemblyAttribute>

      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>CustomTemplateHivePath</_Parameter1>
        <_Parameter2>$(CustomTemplateHivePath)</_Parameter2>
      </AssemblyAttribute>

      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute" Condition="'$(TemplateTestDotNetRoot)' != ''">
        <_Parameter1>DotNetHostOverride</_Parameter1>
        <_Parameter2>$(TemplateTestDotNetRoot)$(_DotNetHostFileName)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>

    <Message Importance="high" Text="Preparing environment for tests" />
    <!-- Remove the template creation folders and the package-restore folders to ensure that when we run the tests we don't
         get cached results and changes show up.
    -->

    <ItemGroup>
      <_ExistingFilesFromLastRun Include="$(TestTemplateCreationFolder)**\*" />
    </ItemGroup>

    <Delete Files="@(_ExistingFilesFromLastRun)" ContinueOnError="true" />

    <RemoveDir Directories="$(TestTemplateCreationFolder)" Condition="Exists('$(TestTemplateCreationFolder)')" ContinueOnError="true">
      <Output TaskParameter="RemovedDirectories" ItemName="_CleanedUpDirectories" />
    </RemoveDir>
    <RemoveDir Directories="$(TestPackageRestorePath)" Condition="Exists('$(TestPackageRestorePath)')" ContinueOnError="true">
      <Output TaskParameter="RemovedDirectories" ItemName="_CleanedUpDirectories" />
    </RemoveDir>

    <ItemGroup Condition="'$(TemplateTestDotNetRoot)' != ''">
      <_FilesToCopy Include="$(LocalDotNetRoot)$(_DotNetHostFileName)" />
      <_FilesToCopy Include="$(LocalDotNetRoot)host\**\*" DestinationRelativeFolder="host\" />
      <_FilesToCopy Include="$(LocalDotNetRoot)shared\**\*" DestinationRelativeFolder="shared\" />
      <_FilesToCopy Include="$(LocalDotNetRoot)sdk\**\*" DestinationRelativeFolder="sdk\" />
      <_FilesToCopy Include="$(SharedFrameworkLayoutRoot)\**\*" />

      <_DestinationFiles Include="@(_FilesToCopy->'$(TemplateTestDotNetRoot)%(DestinationRelativeFolder)%(RecursiveDir)%(Filename)%(Extension)')" />
    </ItemGroup>

    <Copy SourceFiles="@(_FilesToCopy)"
          DestinationFiles="@(_DestinationFiles)"
          SkipUnchangedFiles="true" />

    <Message Importance="high" Text="Removed directory %(_CleanedUpDirectories.Identity)" />

    <Message Importance="high" Text="Created directory %(_CreatedDirectories.Identity)" />

    <GenerateFileFromTemplate
      TemplateFile="$(MSBuildThisFileDirectory)..\TestInfrastructure\Directory.Build.targets.in"
      Properties="Configuration=$(Configuration);
          RestoreAdditionalProjectSources=$([MSBuild]::Escape('$(RestoreAdditionalProjectSources);$(ArtifactsShippingPackagesDir);$(ArtifactsNonShippingPackagesDir)'))"
      OutputPath="$(TestTemplateCreationFolder)Directory.Build.targets" />

    <GenerateFileFromTemplate
      TemplateFile="$(MSBuildThisFileDirectory)..\TestInfrastructure\Directory.Build.props.in"
      Properties="RepoRoot=$(RepoRoot);ArtifactsBinDir=$(ArtifactsBinDir);TargetingPackLayoutRoot=$(TargetingPackLayoutRoot);SharedFrameworkLayoutRoot=$(SharedFrameworkLayoutRoot);TestDependsOnAspNetPackages=$(TestDependsOnAspNetPackages);"
      OutputPath="$(TestTemplateCreationFolder)Directory.Build.props" />

    <!-- Workaround https://github.com/dotnet/core-setup/issues/6420 - there is no MSBuild setting for rollforward yet -->
    <Copy SourceFiles="$(MSBuildThisFileDirectory)..\TestInfrastructure\runtimeconfig.norollforward.json"
      DestinationFolder="$(TestTemplateCreationFolder)"
      UseHardLinksIfPossible="true" />
  </Target>
</Project>
