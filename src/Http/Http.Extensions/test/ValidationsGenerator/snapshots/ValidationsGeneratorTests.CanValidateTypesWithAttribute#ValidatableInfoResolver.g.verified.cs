//HintName: ValidatableInfoResolver.g.cs
#nullable enable annotations
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable

namespace System.Runtime.CompilerServices
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.AspNetCore.Http.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60", "42.42.42.42")]
    [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)]
    file sealed class InterceptsLocationAttribute : System.Attribute
    {
        public InterceptsLocationAttribute(int version, string data)
        {
        }
    }
}

namespace Microsoft.AspNetCore.Http.Validation.Generated
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.AspNetCore.Http.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60", "42.42.42.42")]
    file sealed class GeneratedValidatablePropertyInfo : global::Microsoft.AspNetCore.Http.Validation.ValidatablePropertyInfo
    {
        public GeneratedValidatablePropertyInfo(
            [param: global::System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(global::System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties)]
            global::System.Type containingType,
            global::System.Type propertyType,
            string name,
            string displayName) : base(containingType, propertyType, name, displayName)
        {
            ContainingType = containingType;
            Name = name;
        }

        internal global::System.Type ContainingType { get; }
        internal string Name { get; }

        protected override global::System.ComponentModel.DataAnnotations.ValidationAttribute[] GetValidationAttributes()
            => ValidationAttributeCache.GetValidationAttributes(ContainingType, Name);
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.AspNetCore.Http.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60", "42.42.42.42")]
    file sealed class GeneratedValidatableTypeInfo : global::Microsoft.AspNetCore.Http.Validation.ValidatableTypeInfo
    {
        public GeneratedValidatableTypeInfo(
            [param: global::System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(global::System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.Interfaces)]
            global::System.Type type,
            ValidatablePropertyInfo[] members) : base(type, members) { }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.AspNetCore.Http.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60", "42.42.42.42")]
    file class GeneratedValidatableInfoResolver : global::Microsoft.AspNetCore.Http.Validation.IValidatableInfoResolver
    {
        public bool TryGetValidatableTypeInfo(global::System.Type type, [global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)] out global::Microsoft.AspNetCore.Http.Validation.IValidatableInfo? validatableInfo)
        {
            validatableInfo = null;
            if (type == typeof(global::SubType))
            {
                validatableInfo = CreateSubType();
                return true;
            }
            if (type == typeof(global::SubTypeWithInheritance))
            {
                validatableInfo = CreateSubTypeWithInheritance();
                return true;
            }
            if (type == typeof(global::ComplexType))
            {
                validatableInfo = CreateComplexType();
                return true;
            }

            return false;
        }

        // No-ops, rely on runtime code for ParameterInfo-based resolution
        public bool TryGetValidatableParameterInfo(global::System.Reflection.ParameterInfo parameterInfo, [global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)] out global::Microsoft.AspNetCore.Http.Validation.IValidatableInfo? validatableInfo)
        {
            validatableInfo = null;
            return false;
        }

        private ValidatableTypeInfo CreateSubType()
        {
            return new GeneratedValidatableTypeInfo(
                type: typeof(global::SubType),
                members: [
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::SubType),
                        propertyType: typeof(string),
                        name: "RequiredProperty",
                        displayName: "RequiredProperty"
                    ),
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::SubType),
                        propertyType: typeof(string),
                        name: "StringWithLength",
                        displayName: "StringWithLength"
                    ),
                ]
            );
        }
        private ValidatableTypeInfo CreateSubTypeWithInheritance()
        {
            return new GeneratedValidatableTypeInfo(
                type: typeof(global::SubTypeWithInheritance),
                members: [
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::SubTypeWithInheritance),
                        propertyType: typeof(string),
                        name: "EmailString",
                        displayName: "EmailString"
                    ),
                ]
            );
        }
        private ValidatableTypeInfo CreateComplexType()
        {
            return new GeneratedValidatableTypeInfo(
                type: typeof(global::ComplexType),
                members: [
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::ComplexType),
                        propertyType: typeof(int),
                        name: "IntegerWithRange",
                        displayName: "IntegerWithRange"
                    ),
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::ComplexType),
                        propertyType: typeof(int),
                        name: "IntegerWithRangeAndDisplayName",
                        displayName: "Valid identifier"
                    ),
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::ComplexType),
                        propertyType: typeof(global::SubType),
                        name: "PropertyWithMemberAttributes",
                        displayName: "PropertyWithMemberAttributes"
                    ),
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::ComplexType),
                        propertyType: typeof(global::SubType),
                        name: "PropertyWithoutMemberAttributes",
                        displayName: "PropertyWithoutMemberAttributes"
                    ),
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::ComplexType),
                        propertyType: typeof(global::SubTypeWithInheritance),
                        name: "PropertyWithInheritance",
                        displayName: "PropertyWithInheritance"
                    ),
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::ComplexType),
                        propertyType: typeof(global::System.Collections.Generic.List<global::SubType>),
                        name: "ListOfSubTypes",
                        displayName: "ListOfSubTypes"
                    ),
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::ComplexType),
                        propertyType: typeof(int),
                        name: "IntegerWithCustomValidationAttribute",
                        displayName: "IntegerWithCustomValidationAttribute"
                    ),
                    new GeneratedValidatablePropertyInfo(
                        containingType: typeof(global::ComplexType),
                        propertyType: typeof(int),
                        name: "PropertyWithMultipleAttributes",
                        displayName: "PropertyWithMultipleAttributes"
                    ),
                ]
            );
        }

    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.AspNetCore.Http.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60", "42.42.42.42")]
    file static class GeneratedServiceCollectionExtensions
    {
        [InterceptsLocation]
        public static global::Microsoft.Extensions.DependencyInjection.IServiceCollection AddValidation(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services, global::System.Action<ValidationOptions>? configureOptions = null)
        {
            // Use non-extension method to avoid infinite recursion.
            return global::Microsoft.Extensions.DependencyInjection.ValidationServiceCollectionExtensions.AddValidation(services, options =>
            {
                options.Resolvers.Insert(0, new GeneratedValidatableInfoResolver());
                if (configureOptions is not null)
                {
                    configureOptions(options);
                }
            });
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.AspNetCore.Http.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60", "42.42.42.42")]
    file static class ValidationAttributeCache
    {
        private sealed record CacheKey(global::System.Type ContainingType, string PropertyName);
        private static readonly global::System.Collections.Concurrent.ConcurrentDictionary<CacheKey, global::System.ComponentModel.DataAnnotations.ValidationAttribute[]> _cache = new();

        public static global::System.ComponentModel.DataAnnotations.ValidationAttribute[] GetValidationAttributes(
            global::System.Type containingType,
            string propertyName)
        {
            var key = new CacheKey(containingType, propertyName);
            return _cache.GetOrAdd(key, static k =>
            {
                var property = k.ContainingType.GetProperty(k.PropertyName);
                if (property == null)
                {
                    return [];
                }

                return [.. global::System.Reflection.CustomAttributeExtensions.GetCustomAttributes<global::System.ComponentModel.DataAnnotations.ValidationAttribute>(property, inherit: true)];
            });
        }
    }
}