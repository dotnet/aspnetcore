<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UnableToResolveRoutePattern_Title" xml:space="preserve">
    <value>Unable to resolve route pattern</value>
  </data>
  <data name="UnableToResolveRoutePattern_Message" xml:space="preserve">
    <value>Unable to statically resolve route pattern for endpoint. Compile-time endpoint generation will skip this endpoint and the endpoint will be generated at runtime. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="UnableToResolveMethod_Title" xml:space="preserve">
    <value>Unable to resolve endpoint handler</value>
  </data>
  <data name="UnableToResolveMethod_Message" xml:space="preserve">
    <value>Unable to statically resolve endpoint handler method. Only method groups, lambda expressions or readonly fields/variables are allowed. Compile-time endpoint generation will skip this endpoint and the endpoint will be generated at runtime. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="UnableToResolveParameter_Message" xml:space="preserve">
    <value>Unable to statically resolve parameter named '{0}' for endpoint. Compile-time endpoint generation will skip this endpoint and the endpoint will be generated at runtime. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="UnableToResolveParameter_Title" xml:space="preserve">
    <value>Unable to resolve parameter</value>
  </data>
  <data name="UnableToResolveAnonymousReturnType_Message" xml:space="preserve">
    <value>Unable to resolve anonymous return type. Compile-time endpoint generation will skip this endpoint and the endpoint will be generated at runtime. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="UnableToResolveAnonymousReturnType_Title" xml:space="preserve">
    <value>Unable to resolve anonymous type</value>
  </data>
  <data name="InvalidAsParametersAbstractType_Title" xml:space="preserve">
    <value>Invalid abstract type</value>
  </data>
  <data name="InvalidAsParametersAbstractType_Message" xml:space="preserve">
    <value>The abstract type '{0}' is not supported. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="InvalidAsParametersSignature_Title" xml:space="preserve">
    <value>Invalid constructor parameters</value>
  </data>
  <data name="InvalidAsParametersSignature_Message" xml:space="preserve">
    <value>The public parameterized constructor must contain only parameters that match the declared public properties for type '{0}'. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="InvalidAsParametersNoConstructorFound_Title" xml:space="preserve">
    <value>No valid constructor found</value>
  </data>
  <data name="InvalidAsParametersNoConstructorFound_Message" xml:space="preserve">
    <value>No public parameterless constructor found for type '{0}'. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="InvalidAsParametersSingleConstructorOnly_Title" xml:space="preserve">
    <value>Multiple public constructors found</value>
  </data>
  <data name="InvalidAsParametersSingleConstructorOnly_Message" xml:space="preserve">
    <value>Only a single public parameterized constructor is allowed for type '{0}'. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="InvalidAsParametersNested_Title" xml:space="preserve">
    <value>Invalid nested AsParameters</value>
  </data>
  <data name="InvalidAsParametersNested_Message" xml:space="preserve">
    <value>Nested AsParametersAttribute is not supported and should be used only for handler parameters. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="InvalidAsParametersNullable_Title" xml:space="preserve">
    <value>Unexpected nullable type</value>
  </data>
  <data name="InvalidAsParametersNullable_Message" xml:space="preserve">
    <value>The nullable type '{0}' is not supported. Mark the parameter as non-nullable. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="TypeParametersNotSupported_Title" xml:space="preserve">
    <value>Type parameters not supported</value>
  </data>
  <data name="TypeParametersNotSupported_Message" xml:space="preserve">
    <value>Endpoints with generic type parameters are not supported. Compile-time endpoint generation will skip this endpoint and the endpoint will be generated at runtime. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="InaccessibleTypesNotSupported_Title" xml:space="preserve">
    <value>Unable to resolve inaccessible type</value>
  </data>
  <data name="InaccessibleTypesNotSupported_Message" xml:space="preserve">
    <value>Encountered inaccessible type '{0}' while processing endpoint. Compile-time endpoint generation will skip this endpoint and the endpoint will be generated at runtime. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
  <data name="KeyedAndNotKeyedServiceAttributesNotSupported_Title" xml:space="preserve">
    <value>Invalid source attributes</value>
  </data>
  <data name="KeyedAndNotKeyedServiceAttributesNotSupported_Message" xml:space="preserve">
    <value>The [FromKeyedServices] attribute is not supported on parameters that are also annotated with IFromServiceMetadata. For more information, please see https://aka.ms/aspnet/rdg-known-issues</value>
  </data>
</root>
